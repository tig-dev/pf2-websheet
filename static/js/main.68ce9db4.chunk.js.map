{"version":3,"sources":["components/character/character.jsx","components/combat/combat.jsx","components/feats/feats.jsx","components/inventory/inventory.jsx","components/notes/notes-general.jsx","components/common/base-types.jsx","components/notes/notes-other.jsx","components/notes/notes.jsx","components/references/references.jsx","components/skills/skills.jsx","components/spells/spells.jsx","components/app/reducer.jsx","components/app/new-button.jsx","components/app/load-button.jsx","components/app/save-button.jsx","components/app/app.jsx","tests/serviceWorker.js","index.js"],"names":["Character","Combat","Feats","Inventory","TextArea","GeneralNotes","state","dispatch","useState","editing","setEditing","debouncedUpdate","debounce","newText","newGeneralNote","cloneDeep","notes","general","isNull","text","type","payload","value","className","title","icon","CheckOutlined","EditFilled","onClick","flush","defaultValue","autoSize","minRows","maxRows","onChange","e","persist","target","baseSkill","training","ability","misc_bonus","baseNote","id","OtherNotes","useEffect","other","length","addOther","newOtherNotes","newNote","push","debouncedUpdateTitle","updateIndex","findIndex","updatedNote","debouncedUpdateText","toggleEditing","PlusOutlined","map","note","key","onPressEnter","CloseOutlined","without","removeOther","Notes","References","Skills","Spells","InitMainState","character","name","ancestry","heritage","class","level","abilities","strength","constitution","dexterity","intelligence","wisdom","charisma","feats","skill","bonus","skills","combat","attacks","melee","ranged","spells","cantrip_level","casting_ability","slots","1","2","3","4","5","6","7","8","9","10","inventory","bulk","current","encumbered","max","coin","copper","silver","gold","platinum","worn","readied","MainReducer","action","confirm","NewButton","size","isEqual","success","ExclamationCircleOutlined","content","okText","onOk","Option","LoadButton","loadVisible","setLoadVisible","toLoadName","setToLoadName","loadChar","JSON","parse","localStorage","error","keys","info","visible","closable","onCancel","placeholder","SaveButton","stringify","Header","Content","Sider","Footer","App","currContent","changeCurrContent","useReducer","mainContent","src","process","alt","theme","mode","onSelect","item","defaultSelectedKeys","Item","UserOutlined","TagsOutlined","BarsOutlined","AlertOutlined","FireOutlined","ShoppingOutlined","BookOutlined","FileSearchOutlined","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.68ce9db4.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Character() {\n    return (\n        <div>This is Character Content</div>\n    )\n}\n\nexport default Character;","import React from 'react';\n\nfunction Combat() {\n    return (\n        <div>This is Combat Content</div>\n    )\n}\n\nexport default Combat;","import React from 'react';\n\nfunction Feats() {\n    return (\n        <div>This is Feats Content</div>\n    )\n}\n\nexport default Feats;","import React from 'react';\n\nfunction Inventory() {\n    return (\n        <div>This is Inventory Content</div>\n    )\n}\n\nexport default Inventory;","import React, { useState } from \"react\";\nimport { cloneDeep, debounce, isNull } from \"lodash\";\nimport { Card, Button, Input } from \"antd\";\nimport { EditFilled, CheckOutlined } from \"@ant-design/icons\";\n\nconst { TextArea } = Input;\n\nconst GeneralNotes = ({ state, dispatch }) => {\n  const [editing, setEditing] = useState(false);\n\n  const changeGeneral = (newText = null) => {\n    let newGeneralNote = cloneDeep(state.notes.general);\n\n    if (!isNull(newText)) {\n      newGeneralNote.text = newText;\n    }\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: true,\n        value: newGeneralNote,\n      },\n    });\n  };\n\n  const debouncedUpdate = debounce(changeGeneral, 300);\n\n  const toggleEditing = () => {\n    if (editing) {\n      debouncedUpdate.flush();\n      setEditing(false);\n    } else {\n      setEditing(true);\n    }\n  };\n\n  return (\n    <div className={\"general-notes\"}>\n      <Card\n        title={\n          <div className={\"card-header\"}>\n            {state.notes.general.title}\n            <Button\n              type={\"primary\"}\n              className={editing ? \"green-button\" : \"blue-button\"}\n              icon={editing ? <CheckOutlined /> : <EditFilled />}\n              onClick={toggleEditing}\n            />\n          </div>\n        }\n      >\n        {editing ? (\n          <TextArea\n            className={\"general-notes-edit\"}\n            defaultValue={state.notes.general.text}\n            autoSize={{ minRows: 10, maxRows: 35 }}\n            onChange={(e) => {\n              e.persist();\n              debouncedUpdate(e.target.value);\n            }}\n          />\n        ) : (\n          <p className={\"note-body\"}>{state.notes.general.text}</p>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default GeneralNotes;\n","export const baseSkill = {\n    training: \"U\",\n    ability: null,\n    misc_bonus: 0,\n}\n\nexport const baseFeat = {\n    name: \"\",\n    type: \"\",\n    level: 0,\n    traits: [],\n    description: \"\",\n    action: false,\n    action_cost: 0\n}\n\nexport const baseSpell = {\n    name: \"\",\n    level: \"\",\n    traits: [],\n    description: \"\"\n}\n\nexport const baseNote = {\n    id: 0,\n    title: \"\",\n    text: \"\"\n}\n\nexport const baseItem = {\n    name: \"\",\n    quantity: 1,\n    bulk: 0.0,\n    description: \"\"\n}\n\nexport const baseAttack = {\n    name: \"\",\n    ability: \"STR\",\n    atk_bonus: 0,\n    atk_misc: 0,\n    prof: \"U\",\n    dice: \"1d6\",\n    dmg_bonus: 0,\n    dmg_misc: 0,\n}","import React, { useState, useEffect } from \"react\";\nimport { map, debounce, cloneDeep, findIndex, without } from \"lodash\";\nimport { Card, Button, Input } from \"antd\";\nimport { EditFilled, PlusOutlined, CloseOutlined } from \"@ant-design/icons\";\n\nimport { baseNote } from \"../common/base-types\";\n\nconst { TextArea } = Input;\n\nconst OtherNotes = ({ state, dispatch }) => {\n  const [editing, setEditing] = useState(0);\n\n  useEffect(() => {\n    if (state.notes.other.length === 0) {\n      addOther();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  const addOther = () => {\n    let newOtherNotes = [...state.notes.other];\n    let newNote = {\n      ...cloneDeep(baseNote),\n      id: newOtherNotes.length + 1,\n      title: \"New Note\",\n      text: \"Write here!\",\n    };\n\n    newOtherNotes.push(newNote);\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: newOtherNotes,\n      },\n    });\n  };\n\n  const updateOtherTitle = (id, title) => {\n    let newOtherNotes = [...state.notes.other];\n    let updateIndex = findIndex(newOtherNotes, [\"id\", id]);\n    let updatedNote = cloneDeep(newOtherNotes[updateIndex]);\n\n    updatedNote.title = title;\n\n    newOtherNotes[updateIndex] = updatedNote;\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: newOtherNotes,\n      },\n    });\n  };\n\n  const updateOtherText = (id, text) => {\n    let newOtherNotes = [...state.notes.other];\n    let updateIndex = findIndex(newOtherNotes, [\"id\", id]);\n    let updatedNote = cloneDeep(newOtherNotes[updateIndex]);\n\n    updatedNote.text = text;\n\n    newOtherNotes[updateIndex] = updatedNote;\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: newOtherNotes,\n      },\n    });\n  };\n\n  const removeOther = (note) => {\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: without(state.notes.other, note),\n      },\n    });\n  };\n\n  const debouncedUpdateTitle = debounce(updateOtherTitle, 300);\n  const debouncedUpdateText = debounce(updateOtherText, 300);\n\n  const toggleEditing = (id) => {\n    if (editing !== 0) {\n      debouncedUpdateTitle.flush();\n      debouncedUpdateText.flush();\n      setEditing(0);\n    } else {\n      setEditing(id);\n    }\n  };\n\n  return (\n    <div className={\"other-notes\"}>\n      <Card\n        title={\n          <div className={\"card-header\"}>\n            Other Notes\n            <Button\n              type={\"primary\"}\n              className={\"green-button\"}\n              icon={<PlusOutlined />}\n              onClick={addOther}\n            />\n          </div>\n        }\n      >\n        {map(state.notes.other, (note) => {\n          return (\n            <Card\n              key={`other-note-${note.id}`}\n              title={\n                <div className={\"card-header\"}>\n                  {editing === note.id ? (\n                    <Input\n                      className={\"other-notes-edit-title\"}\n                      defaultValue={note.title}\n                      onPressEnter={() => toggleEditing(note.id)}\n                      onChange={(e) => {\n                        e.persist();\n                        debouncedUpdateTitle(note.id, e.target.value);\n                      }}\n                    />\n                  ) : (\n                    note.title\n                  )}\n                  <div className={\"card-header-actions\"}>\n                    <Button\n                      type={\"primary\"}\n                      // size={\"small\"}\n                      className={\"blue-button\"}\n                      icon={<EditFilled />}\n                      onClick={() => toggleEditing(note.id)}\n                    />\n                    <Button\n                      type={\"primary\"}\n                      // size={\"small\"}\n                      className={\"red-button\"}\n                      icon={<CloseOutlined />}\n                      onClick={() => removeOther(note)}\n                    />\n                  </div>\n                </div>\n              }\n            >\n              {editing === note.id ? (\n                <TextArea\n                  className={\"other-notes-edit-text\"}\n                  defaultValue={note.text}\n                  autoSize={{ minRows: 4 }}\n                  onChange={(e) => {\n                    e.persist();\n                    debouncedUpdateText(note.id, e.target.value);\n                  }}\n                />\n              ) : (\n                <p>{note.text}</p>\n              )}\n            </Card>\n          );\n        })}\n      </Card>\n    </div>\n  );\n};\n\nexport default OtherNotes;\n","import React from \"react\";\n\nimport GeneralNotes from \"./notes-general\";\nimport OtherNotes from \"./notes-other\";\nimport './notes.less';\n\nconst Notes = ({ state, dispatch }) => {\n  return (\n    <div className={\"notes-content\"}>\n      <GeneralNotes state={state} dispatch={dispatch} />\n      <OtherNotes state={state} dispatch={dispatch} />\n    </div>\n  );\n}\n\nexport default Notes;\n","import React from 'react';\n\nfunction References() {\n    return (\n        <div>This is References Content</div>\n    )\n}\n\nexport default References;","import React from 'react';\n\nfunction Skills() {\n    return (\n        <div>This is Skills Content</div>\n    )\n}\n\nexport default Skills;","import React from 'react';\n\nfunction Spells() {\n    return (\n        <div>This is Spells Content</div>\n    )\n}\n\nexport default Spells;","import { cloneDeep } from \"lodash\";\n\nimport { baseSkill, baseNote } from \"../common/base-types\";\n\nexport const abilitiesEnum = {\n  STR: \"strength\",\n  CON: \"constitution\",\n  DEX: \"dexterity\",\n  INT: \"intelligence\",\n  WIS: \"wisdom\",\n  CHA: \"charisma\",\n};\n\nexport const InitMainState = {\n  character: {\n    name: \"\",\n    ancestry: \"\",\n    heritage: \"\",\n    class: \"\",\n    level: 1,\n    abilities: {\n      strength: 10,\n      constitution: 10,\n      dexterity: 10,\n      intelligence: 10,\n      wisdom: 10,\n      charisma: 10,\n    },\n  },\n  feats: {\n    class: [],\n    general: [],\n    skill: [],\n    ancestry: [],\n    heritage: [],\n    bonus: [],\n  },\n  skills: [\n    {\n      ...cloneDeep(baseSkill),\n      name: \"acrobatics\",\n      ability: \"DEX\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"arcana\",\n      ability: \"INT\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"athletics\",\n      ability: \"STR\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"crafting\",\n      ability: \"INT\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"deception\",\n      ability: \"CHA\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"diplomacy\",\n      ability: \"CHA\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"intimidation\",\n      ability: \"CHA\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"lore\",\n      ability: \"INT\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"medicine\",\n      ability: \"WIS\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"nature\",\n      ability: \"WIS\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"occultism\",\n      ability: \"INT\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"performance\",\n      ability: \"CHA\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"religion\",\n      ability: \"WIS\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"society\",\n      ability: \"INT\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"stealth\",\n      ability: \"DEX\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"survival\",\n      ability: \"WIS\",\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"thievery\",\n      ability: \"DEX\",\n    },\n  ],\n  combat: {\n    attacks: {\n      melee: [],\n      ranged: [],\n    },\n  },\n  spells: {\n    cantrip_level: 1,\n    casting_ability: null,\n    slots: {\n      1: 0,\n      2: 0,\n      3: 0,\n      4: 0,\n      5: 0,\n      6: 0,\n      7: 0,\n      8: 0,\n      9: 0,\n      10: 0,\n    },\n    spells: {\n      1: [],\n      2: [],\n      3: [],\n      4: [],\n      5: [],\n      6: [],\n      7: [],\n      8: [],\n      9: [],\n      10: [],\n    },\n  },\n  inventory: {\n    bulk: {\n      current: 0.0,\n      encumbered: 5.0,\n      max: 8.0,\n    },\n    coin: {\n      copper: 0,\n      silver: 0,\n      gold: 15,\n      platinum: 0,\n    },\n    worn: [],\n    readied: [],\n    other: [],\n  },\n  notes: {\n    general: {\n      ...cloneDeep(baseNote),\n      title: \"General Notes\",\n      text: \"Here are your general notes!\",\n    },\n    other: [],\n  },\n};\n\nexport const MainReducer = (state, action) => {\n  switch (action.type) {\n    case \"NEW\": {\n      return cloneDeep(InitMainState);\n    }\n\n    case \"LOAD\": {\n      return cloneDeep(action.payload)\n    }\n\n    case \"NOTES\": {\n      // action.payload: {\n      //     general: boolean,\n      //     value: {title: string, text: string} OR {title: string, text: string}[]\n      // }\n      if (action.payload.general) {\n        return {\n          ...state,\n          notes: {\n            ...state.notes,\n            general: cloneDeep(action.payload.value),\n          },\n        };\n      } else {\n        return {\n          ...state,\n          notes: {\n            ...state.notes,\n            other: [...action.payload.value],\n          },\n        };\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import React from \"react\";\nimport { isEqual } from \"lodash\";\nimport { Button, Modal, message } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\n\nimport { InitMainState } from \"./reducer\";\n\nconst { confirm } = Modal;\n\nconst NewButton = ({ state, dispatch }) => {\n  const newChar = () => {\n    dispatch({ type: \"NEW\" });\n    message.success(\"Created new character!\");\n  };\n\n  const handleNew = () => {\n    if (!isEqual(state, InitMainState)) {\n      confirm({\n        title: \"Do you want to override the current character?\",\n        icon: <ExclamationCircleOutlined />,\n        content: \"You will lose any unsaved changes.\",\n        okText: \"Override\",\n        onOk() {\n          newChar();\n        },\n      });\n    } else {\n      message.success(\"Created new character!\");\n    }\n  };\n\n  return (\n    <Button\n      type={\"primary\"}\n      className={\"red-button\"}\n      size={\"small\"}\n      onClick={handleNew}\n    >\n      New\n    </Button>\n  );\n};\n\nexport default NewButton;\n","import React, { useState } from \"react\";\nimport { keys, isEqual, map } from \"lodash\";\nimport { Button, Select, Modal, message } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\n\nimport { InitMainState } from \"./reducer\";\n\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nconst LoadButton = ({ state, dispatch }) => {\n  const [loadVisible, setLoadVisible] = useState(false);\n  const [toLoadName, setToLoadName] = useState(\"\");\n\n  const loadChar = () => {\n    if(toLoadName) {\n      dispatch({\n        type: 'LOAD',\n        payload: JSON.parse(localStorage[toLoadName])\n      })\n    } else {\n      message.error(\"No character selected!\")\n    }\n  };\n\n  const handleOk = () => {\n    setLoadVisible(false);\n    if (!isEqual(state, InitMainState)) {\n      confirm({\n        title: \"Do you want to override the current character?\",\n        icon: <ExclamationCircleOutlined />,\n        content: \"You will lose any unsaved changes.\",\n        okText: \"Override\",\n        onOk() {\n          loadChar();\n        },\n      });\n    } else {\n      loadChar();\n    }\n  };\n\n  const handleOpenModal = () => {\n    if (keys(localStorage).length === 0) {\n      message.info(\"No characters to load.\");\n    } else {\n      setLoadVisible(true);\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        type={\"primary\"}\n        className={\"blue-button\"}\n        size={\"small\"}\n        onClick={handleOpenModal}\n      >\n        Load\n      </Button>\n      <Modal\n        title={\"Load Character\"}\n        visible={loadVisible}\n        closable={false}\n        onOk={handleOk}\n        okText={\"Load\"}\n        onCancel={() => setLoadVisible(false)}\n      >\n        <Select\n          placeholder={\"Select a character\"}\n          onChange={(value) => setToLoadName(value)}\n        >\n          {map(keys(localStorage), (name) => {\n            return <Option key={name} value={name}>{name}</Option>;\n          })}\n        </Select>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoadButton;\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { Button, message } from \"antd\";\n\nconst SaveButton = ({ state }) => {\n  const saveChar = () => {\n    localStorage[state.character.name] = JSON.stringify(\n      cloneDeep(state)\n    );\n    message.success(\"Saved character!\");\n  };\n\n  return (\n    <Button\n      type={\"primary\"}\n      className={\"green-button\"}\n      size={\"small\"}\n      onClick={saveChar}\n    >\n      Save\n    </Button>\n  );\n};\n\nexport default SaveButton;\n","import React, { useState, useReducer } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  UserOutlined,\n  FireOutlined,\n  TagsOutlined,\n  BarsOutlined,\n  AlertOutlined,\n  ShoppingOutlined,\n  BookOutlined,\n  FileSearchOutlined,\n} from \"@ant-design/icons\";\n\nimport Character from \"../character/character\";\nimport Combat from \"../combat/combat\";\nimport Feats from \"../feats/feats\";\nimport Inventory from \"../inventory/inventory\";\nimport Notes from \"../notes/notes\";\nimport References from \"../references/references\";\nimport Skills from \"../skills/skills\";\nimport Spells from \"../spells/spells\";\nimport NewButton from \"./new-button\";\nimport LoadButton from \"./load-button\";\nimport SaveButton from \"./save-button\";\nimport { InitMainState, MainReducer } from \"./reducer\";\n\nimport \"./app.less\";\n\nconst { Header, Content, Sider, Footer } = Layout;\n\nconst App = () => {\n  const [currContent, changeCurrContent] = useState(\"character\");\n  const [state, dispatch] = useReducer(MainReducer, InitMainState);\n\n  const handleMenuChange = (item) => {\n    changeCurrContent(item.key);\n  };\n\n  let mainContent = <div>This is no Content</div>;\n  switch (currContent) {\n    case \"character\":\n      mainContent = <Character />;\n      break;\n\n    case \"feats\":\n      mainContent = <Feats />;\n      break;\n\n    case \"skills\":\n      mainContent = <Skills />;\n      break;\n\n    case \"combat\":\n      mainContent = <Combat />;\n      break;\n\n    case \"spells\":\n      mainContent = <Spells />;\n      break;\n\n    case \"inventory\":\n      mainContent = <Inventory />;\n      break;\n\n    case \"notes\":\n      mainContent = <Notes state={state} dispatch={dispatch} />;\n      break;\n\n    case \"reference\":\n      mainContent = <References />;\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"app\">\n      <Layout>\n        <Sider className={\"app-sider\"}>\n          <div className={\"app-header\"}>\n            <img\n              className={\"logo\"}\n              src={process.env.PUBLIC_URL + \"/logo192.png\"}\n              alt={\n                \"Website icon depicting a gold gear on a dark red square with rounded corners\"\n              }\n            />\n            <Header>PF2 WebSheet</Header>\n          </div>\n          <div className={\"button-group row\"}>\n            <NewButton state={state} dispatch={dispatch} />\n            <LoadButton state={state} dispatch={dispatch} />\n            <SaveButton state={state} />\n          </div>\n          <Menu\n            theme=\"dark\"\n            mode=\"inline\"\n            onSelect={handleMenuChange}\n            defaultSelectedKeys={[\"character\"]}\n          >\n            <Menu.Item\n              key=\"character\"\n              className={\"red\"}\n              icon={<UserOutlined />}\n            >\n              Character\n            </Menu.Item>\n            <Menu.Item\n              key=\"feats\"\n              className={\"volcano\"}\n              icon={<TagsOutlined />}\n            >\n              Feats\n            </Menu.Item>\n            <Menu.Item\n              key=\"skills\"\n              className={\"orange\"}\n              icon={<BarsOutlined />}\n            >\n              Skills\n            </Menu.Item>\n            <Menu.Item\n              key=\"combat\"\n              className={\"green\"}\n              icon={<AlertOutlined />}\n            >\n              Combat\n            </Menu.Item>\n            <Menu.Item key=\"spells\" className={\"blue\"} icon={<FireOutlined />}>\n              Spells\n            </Menu.Item>\n            <Menu.Item\n              key=\"inventory\"\n              className={\"geekblue\"}\n              icon={<ShoppingOutlined />}\n            >\n              Inventory\n            </Menu.Item>\n            <Menu.Item key=\"notes\" className={\"purple\"} icon={<BookOutlined />}>\n              Notes\n            </Menu.Item>\n            <Menu.Item\n              key=\"reference\"\n              className={\"magenta\"}\n              icon={<FileSearchOutlined />}\n            >\n              Reference\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className={\"app-layout\"}>\n          <Content className={\"app-main\"}>{mainContent}</Content>\n          <Footer className={\"app-footer\"}>\n            This web-app uses trademarks and/or copyrights owned by Paizo Inc.,\n            which are used under Paizo's Community Use Policy. We are expressly\n            prohibited from charging you to use or access this content. This\n            web-app is not published, endorsed, or specifically approved by\n            Paizo Inc. For more information about Paizo's Community Use Policy,\n            please visit&nbsp;\n            <a href=\"https://paizo.com/communityuse\">paizo.com/communityuse</a>.\n            For more information about Paizo Inc. and Paizo products, please\n            visit <a href=\"https://paizo.com/\">paizo.com</a>.\n          </Footer>\n        </Layout>\n      </Layout>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.less\";\nimport App from \"./components/app/app\";\nimport * as serviceWorker from \"./tests/serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/character/character.tsx","components/combat/combat.tsx","components/feats/feats.tsx","components/inventory/inventory.tsx","components/common/types.tsx","components/notes/notes-general.tsx","components/common/defaults.tsx","components/notes/notes-other.tsx","components/notes/notes.tsx","components/references/references.tsx","components/skills/skills.tsx","components/spells/spells.tsx","components/common/components/char-header.tsx","components/app/buttons/new-button.tsx","components/app/buttons/load-button.tsx","components/app/buttons/save-button.tsx","components/app/main-reducer.tsx","components/app/app.tsx","tests/serviceWorker.js","index.js"],"names":["Character","Combat","Feats","Inventory","abilities","TextArea","GeneralNotes","state","dispatch","useState","editing","setEditing","debouncedUpdate","debounce","newText","newGeneralNote","cloneDeep","notes","general","isNull","text","type","payload","value","className","title","icon","CheckOutlined","EditFilled","onClick","flush","defaultValue","autoSize","minRows","maxRows","onChange","e","persist","target","baseSkill","name","training","ability","misc_bonus","baseNote","id","mainStateDefault","character","ancestry","heritage","class","level","hero_points","strength","constitution","dexterity","intelligence","wisdom","charisma","feats","skill","bonus","skills","DEX","INT","STR","CHA","WIS","combat","attacks","melee","ranged","spells","cantrip_level","casting_ability","slots","max","unused","inventory","bulk","current","encumbered","coin","copper","silver","gold","platinum","worn","readied","other","containers","OtherNotes","useEffect","length","addOther","newOtherNotes","newNote","push","debouncedUpdateTitle","updateIndex","findIndex","updatedNote","debouncedUpdateText","toggleEditing","PlusOutlined","map","note","key","onPressEnter","CloseOutlined","without","removeOther","Notes","References","Skills","Spells","CharHeader","confirm","NewButton","size","isEqual","success","ExclamationCircleOutlined","content","okText","onOk","Option","LoadButton","loadVisible","setLoadVisible","toLoadName","setToLoadName","loadChar","JSON","parse","localStorage","error","keys","info","visible","closable","onCancel","placeholder","SaveButton","stringify","MainReducer","action","Header","Content","Sider","Footer","App","currContent","changeCurrContent","useReducer","mainContent","src","process","alt","theme","mode","onSelect","item","defaultSelectedKeys","Item","UserOutlined","TagsOutlined","BarsOutlined","AlertOutlined","FireOutlined","ShoppingOutlined","BookOutlined","FileSearchOutlined","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"uYAQeA,MANf,WACI,OACI,2DCIOC,MANf,WACI,OACI,wDCIOC,MANf,WACI,OACI,uDCIOC,ICMHC,EDNGD,EANf,WACI,OACI,2D,2GEGAE,E,IAAAA,SAmEOC,EA/DM,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAkC,EACjCC,oBAAS,GADwB,mBACxDC,EADwD,KAC/CC,EAD+C,KAmBzDC,EAAkBC,oBAhBF,WAAoC,IAAnCC,EAAkC,uDAAT,KAC1CC,EAAiBC,oBAAUT,EAAMU,MAAMC,SAEtCC,iBAAOL,KACVC,EAAeK,KAAON,GAGxBN,EAAS,CACPa,KAAM,QACNC,QAAS,CACPJ,SAAS,EACTK,MAAOR,OAKmC,KAWhD,OACE,yBAAKS,UAAW,iBACd,uBACEC,MACE,yBAAKD,UAAW,eACbjB,EAAMU,MAAMC,QAAQO,MACrB,uBACEJ,KAAM,UACNG,UAAWd,EAAU,eAAiB,cACtCgB,KAAMhB,EAAU,kBAACiB,EAAA,EAAD,MAAoB,kBAACC,EAAA,EAAD,MACpCC,QAnBU,WAChBnB,GACFE,EAAgBkB,QAChBnB,GAAW,IAEXA,GAAW,QAmBRD,EACC,kBAACL,EAAD,CACEmB,UAAW,qBACXO,aAAcxB,EAAMU,MAAMC,QAAQE,KAClCY,SAAU,CAAEC,QAAS,GAAIC,QAAS,IAClCC,SAAU,SAACC,GACTA,EAAEC,UACFzB,EAAgBwB,EAAEE,OAAOf,UAI7B,uBAAGC,UAAW,aAAcjB,EAAMU,MAAMC,QAAQE,S,2CDrD9ChB,K,eAAAA,E,mBAAAA,E,gBAAAA,E,mBAAAA,E,aAAAA,E,gBAAAA,M,KEDL,IAAMmC,EAAuB,CAClCC,KAAM,GACNC,SAAU,IACVC,QAAS,KACTC,WAAY,GAqBDC,EAAqB,CAChCC,GAAI,EACJpB,MAAO,GACPL,KAAM,IA6BK0B,EAAkC,CAC7CC,UAAW,CACTP,KAAM,GACNQ,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,MAAO,EACPC,YAAa,EACbhD,UAAW,CACTiD,SAAU,GACVC,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,OAAQ,GACRC,SAAU,KAGdC,MAAO,CACLT,MAAO,GACPhC,QAAS,GACT0C,MAAO,GACPZ,SAAU,GACVC,SAAU,GACVY,MAAO,IAETC,OAAQ,CAAC,2BAEF9C,oBAAUuB,IAFT,IAGJC,KAAM,aACNE,QAAStC,EAAU2D,MAJf,2BAOD/C,oBAAUuB,IAPT,IAQJC,KAAM,SACNE,QAAStC,EAAU4D,MATf,2BAYDhD,oBAAUuB,IAZT,IAaJC,KAAM,YACNE,QAAStC,EAAU6D,MAdf,2BAiBDjD,oBAAUuB,IAjBT,IAkBJC,KAAM,WACNE,QAAStC,EAAU4D,MAnBf,2BAsBDhD,oBAAUuB,IAtBT,IAuBJC,KAAM,YACNE,QAAStC,EAAU8D,MAxBf,2BA2BDlD,oBAAUuB,IA3BT,IA4BJC,KAAM,YACNE,QAAStC,EAAU8D,MA7Bf,2BAgCDlD,oBAAUuB,IAhCT,IAiCJC,KAAM,eACNE,QAAStC,EAAU8D,MAlCf,2BAqCDlD,oBAAUuB,IArCT,IAsCJC,KAAM,OACNE,QAAStC,EAAU4D,MAvCf,2BA0CDhD,oBAAUuB,IA1CT,IA2CJC,KAAM,WACNE,QAAStC,EAAU+D,MA5Cf,2BA+CDnD,oBAAUuB,IA/CT,IAgDJC,KAAM,SACNE,QAAStC,EAAU+D,MAjDf,2BAoDDnD,oBAAUuB,IApDT,IAqDJC,KAAM,YACNE,QAAStC,EAAU4D,MAtDf,2BAyDDhD,oBAAUuB,IAzDT,IA0DJC,KAAM,cACNE,QAAStC,EAAU8D,MA3Df,2BA8DDlD,oBAAUuB,IA9DT,IA+DJC,KAAM,WACNE,QAAStC,EAAU+D,MAhEf,2BAmEDnD,oBAAUuB,IAnET,IAoEJC,KAAM,UACNE,QAAStC,EAAU4D,MArEf,2BAwEDhD,oBAAUuB,IAxET,IAyEJC,KAAM,UACNE,QAAStC,EAAU2D,MA1Ef,2BA6ED/C,oBAAUuB,IA7ET,IA8EJC,KAAM,WACNE,QAAStC,EAAU+D,MA/Ef,2BAkFDnD,oBAAUuB,IAlFT,IAmFJC,KAAM,WACNE,QAAStC,EAAU2D,OAGvBK,OAAQ,CACNC,QAAS,CACPC,MAAO,GACPC,OAAQ,KAGZC,OAAQ,CACNC,cAAe,EACfC,gBAAiB,KACjBC,MAAO,CACL,CACExB,MAAO,UACPyB,IAAK,EACLC,OAAQ,GAEV,CACE1B,MAAO,EACPyB,IAAK,EACLC,OAAQ,GAEV,CACE1B,MAAO,EACPyB,IAAK,EACLC,OAAQ,GAEV,CACE1B,MAAO,EACPyB,IAAK,EACLC,OAAQ,GAEV,CACE1B,MAAO,EACPyB,IAAK,EACLC,OAAQ,GAEV,CACE1B,MAAO,EACPyB,IAAK,EACLC,OAAQ,GAEV,CACE1B,MAAO,EACPyB,IAAK,EACLC,OAAQ,GAEV,CACE1B,MAAO,EACPyB,IAAK,EACLC,OAAQ,GAEV,CACE1B,MAAO,EACPyB,IAAK,EACLC,OAAQ,GAEV,CACE1B,MAAO,EACPyB,IAAK,EACLC,OAAQ,GAEV,CACE1B,MAAO,GACPyB,IAAK,EACLC,OAAQ,IAGZL,OAAQ,IAEVM,UAAW,CACTC,KAAM,CACJC,QAAS,EACTC,WAAY,EACZL,IAAK,GAEPM,KAAM,CACJC,OAAQ,EACRC,OAAQ,EACRC,KAAM,GACNC,SAAU,GAEZC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,WAAY,IAEdzE,MAAO,CACLC,QAAQ,2BACHF,oBAAU4B,IADR,IAELnB,MAAO,gBACPL,KAAM,iCAERqE,MAAO,KCnQHpF,E,IAAAA,SAyKOsF,EArKI,SAAC,GAA0C,IAAxCpF,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,SAAgC,EAC7BC,mBAAS,GADoB,mBACpDC,EADoD,KAC3CC,EAD2C,KAG3DiF,qBAAU,WACyB,IAA7BrF,EAAMU,MAAMwE,MAAMI,QACpBC,MAGD,CAACvF,IAEJ,IAAMuF,EAAW,WACf,IAAIC,EAAa,YAAOxF,EAAMU,MAAMwE,OAChCO,EAAO,2BACNhF,oBAAU4B,IADJ,IAETC,GAAIkD,EAAcF,OAAS,EAC3BpE,MAAO,WACPL,KAAM,gBAGR2E,EAAcE,KAAKD,GAEnBxF,EAAS,CACPa,KAAM,QACNC,QAAS,CACPJ,SAAS,EACTK,MAAOwE,MAmDPG,EAAuBrF,oBA9CJ,SAACgC,EAAYpB,GACpC,IAAIsE,EAAa,YAAOxF,EAAMU,MAAMwE,OAChCU,EAAcC,oBAAUL,EAAe,CAAC,KAAMlD,IAC9CwD,EAAcrF,oBAAU+E,EAAcI,IAE1CE,EAAY5E,MAAQA,EAEpBsE,EAAcI,GAAeE,EAE7B7F,EAAS,CACPa,KAAM,QACNC,QAAS,CACPJ,SAAS,EACTK,MAAOwE,OAiC2C,KAClDO,EAAsBzF,oBA7BJ,SAACgC,EAAYzB,GACnC,IAAI2E,EAAa,YAAOxF,EAAMU,MAAMwE,OAChCU,EAAcC,oBAAUL,EAAe,CAAC,KAAMlD,IAC9CwD,EAAcrF,oBAAU+E,EAAcI,IAE1CE,EAAYjF,KAAOA,EAEnB2E,EAAcI,GAAeE,EAE7B7F,EAAS,CACPa,KAAM,QACNC,QAAS,CACPJ,SAAS,EACTK,MAAOwE,OAgByC,KAEhDQ,EAAgB,SAAC1D,GACL,IAAZnC,GACFwF,EAAqBpE,QACrBwE,EAAoBxE,QACpBnB,EAAW,IAEXA,EAAWkC,IAIf,OACE,yBAAKrB,UAAW,eACd,uBACEC,MACE,yBAAKD,UAAW,eAAhB,cAEE,uBACEH,KAAM,UACNG,UAAW,eACXE,KAAM,kBAAC8E,EAAA,EAAD,MACN3E,QAASiE,MAKdW,cAAIlG,EAAMU,MAAMwE,OAAO,SAACiB,GACvB,OACE,uBACEC,IAAG,qBAAgBD,EAAK7D,IACxBpB,MACE,yBAAKD,UAAW,eACbd,IAAYgG,EAAK7D,GAChB,uBACErB,UAAW,yBACXO,aAAc2E,EAAKjF,MACnBmF,aAAc,kBAAML,EAAcG,EAAK7D,KACvCV,SAAU,SAACC,GACTA,EAAEC,UACF6D,EAAqBQ,EAAK7D,GAAIT,EAAEE,OAAOf,UAI3CmF,EAAKjF,MAEP,yBAAKD,UAAW,uBACd,uBACEH,KAAM,UACNG,UACEd,IAAYgG,EAAK7D,GAAK,eAAiB,cAEzCnB,KACEhB,IAAYgG,EAAK7D,GAAK,kBAAClB,EAAA,EAAD,MAAoB,kBAACC,EAAA,EAAD,MAE5CC,QAAS,kBAAM0E,EAAcG,EAAK7D,OAEpC,uBACExB,KAAM,UACNG,UAAW,aACXE,KAAM,kBAACmF,EAAA,EAAD,MACNhF,QAAS,kBAxET,SAAC6E,GACnBlG,EAAS,CACPa,KAAM,QACNC,QAAS,CACPJ,SAAS,EACTK,MAAOuF,kBAAQvG,EAAMU,MAAMwE,MAAOiB,MAmELK,CAAYL,SAMlChG,IAAYgG,EAAK7D,GAChB,kBAAC,EAAD,CACErB,UAAW,wBACXO,aAAc2E,EAAKtF,KACnBY,SAAU,CAAEC,QAAS,GACrBE,SAAU,SAACC,GACTA,EAAEC,UACFiE,EAAoBI,EAAK7D,GAAIT,EAAEE,OAAOf,UAI1C,2BAAImF,EAAKtF,aC3JV4F,EATD,SAAC,GAAqC,IAAnCzG,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SACtB,OACE,yBAAKgB,UAAW,iBACd,kBAAC,EAAD,CAAcjB,MAAOA,EAAOC,SAAUA,IACtC,kBAAC,EAAD,CAAYD,MAAOA,EAAOC,SAAUA,MCL3ByG,MANf,WACI,OACI,4DCIOC,MANf,WACI,OACI,wDCIOC,MANf,WACI,OACI,wDCIOC,MANf,WACI,OACI,oD,6DCIAC,G,IAAAA,QAsCOC,GAlCG,SAAC,GAAyC,IAAvC/G,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAsB1B,OACE,uBACEa,KAAM,UACNG,UAAW,aACX+F,KAAM,QACN1F,QArBc,WACX2F,kBAAQjH,EAAOuC,GAWlB,IAAQ2E,QAAQ,0BAVhBJ,GAAQ,CACN5F,MAAO,iDACPC,KAAM,kBAACgG,GAAA,EAAD,MACNC,QAAS,qCACTC,OAAQ,WACRC,KALM,WANVrH,EAAS,CAAEa,KAAM,QACjB,IAAQoG,QAAQ,+BAoBhB,Q,6BC3BIK,G,KAAAA,OACAT,G,IAAAA,QA2EOU,GAvEI,SAAC,GAA0C,IAAxCxH,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,SAAgC,EACrBC,oBAAS,GADY,mBACpDuH,EADoD,KACvCC,EADuC,OAEvBxH,mBAAS,IAFc,mBAEpDyH,EAFoD,KAExCC,EAFwC,KAIrDC,EAAW,WACZF,EACD1H,EAAS,CACPa,KAAM,OACNC,QAAS+G,KAAKC,MAAMC,aAAaL,MAGnC,IAAQM,MAAM,2BA6BlB,OACE,6BACE,uBACEnH,KAAM,UACNG,UAAW,cACX+F,KAAM,QACN1F,QAdkB,WACY,IAA9B4G,eAAKF,cAAc1C,OACrB,IAAQ6C,KAAK,0BAEbT,GAAe,KAMf,QAQA,uBACExG,MAAO,iBACPkH,QAASX,EACTY,UAAU,EACVf,KAvCW,WACfI,GAAe,GACVT,kBAAQjH,EAAOuC,GAWlBsF,IAVAf,GAAQ,CACN5F,MAAO,iDACPC,KAAM,kBAACgG,GAAA,EAAD,MACNC,QAAS,qCACTC,OAAQ,WACRC,KALM,WAMJO,QA+BFR,OAAQ,OACRiB,SAAU,kBAAMZ,GAAe,KAE/B,wBACEa,YAAa,qBACb3G,SAAU,SAACZ,GAAD,OAAmB4G,EAAc5G,KAE1CkF,cAAIgC,eAAKF,eAAe,SAAC/F,GACxB,OAAO,kBAACsF,GAAD,CAAQnB,IAAKnE,EAAMjB,MAAOiB,GAAOA,UClDrCuG,GAlBI,SAAC,GAAgC,IAA9BxI,EAA6B,EAA7BA,MAMpB,OACE,uBACEc,KAAM,UACNG,UAAW,eACX+F,KAAM,QACN1F,QAVa,WACf0G,aAAahI,EAAMwC,UAAUP,MAAQ6F,KAAKW,UAAUhI,oBAAUT,IAC9D,IAAQkH,QAAQ,sBAIhB,SCPSwB,GAAgC,SAAC1I,EAAO2I,GACnD,OAAQA,EAAO7H,MACb,IAAK,MACH,OAAOL,oBAAU8B,GAGnB,IAAK,OACH,OAAO9B,oBAAUkI,EAAO5H,SAG1B,IAAK,QAKH,OAAI4H,EAAO5H,QAAQJ,QACV,2BACFX,GADL,IAEEU,MAAM,2BACDV,EAAMU,OADN,IAEHC,QAASF,oBAAUkI,EAAO5H,QAAQC,WAI/B,2BACFhB,GADL,IAEEU,MAAM,2BACDV,EAAMU,OADN,IAEHwE,MAAM,YAAKyD,EAAO5H,QAAQC,WAMlC,QACE,OAAOhB,ICbL4I,I,WAAAA,QAAQC,G,IAAAA,QAASC,G,IAAAA,MAAOC,G,IAAAA,OA+IjBC,GA7IH,WAAO,IAAD,EACyB9I,mBAAS,aADlC,mBACT+I,EADS,KACIC,EADJ,OAEUC,qBAAWT,GAAanG,GAFlC,mBAETvC,EAFS,KAEFC,EAFE,KAQZmJ,EAAc,mDAClB,OAAQH,GACN,IAAK,YACHG,EAAc,kBAAC,EAAD,MACd,MAEF,IAAK,QACHA,EAAc,kBAAC,EAAD,MACd,MAEF,IAAK,SACHA,EAAc,kBAAC,EAAD,MACd,MAEF,IAAK,SACHA,EAAc,kBAAC,EAAD,MACd,MAEF,IAAK,SACHA,EAAc,kBAAC,EAAD,MACd,MAEF,IAAK,YACHA,EAAc,kBAAC,EAAD,MACd,MAEF,IAAK,QACHA,EAAc,kBAAC,EAAD,CAAOpJ,MAAOA,EAAOC,SAAUA,IAC7C,MAEF,IAAK,YACHmJ,EAAc,kBAAC,EAAD,MAOlB,OACE,yBAAKnI,UAAU,OACb,2BACE,kBAAC6H,GAAD,CAAO7H,UAAW,aAChB,yBAAKA,UAAW,cACd,yBACEA,UAAW,OACXoI,IAAKC,4BACLC,IACE,iFAGJ,kBAACX,GAAD,sBAEF,yBAAK3H,UAAW,oBACd,kBAAC,GAAD,CAAWjB,MAAOA,EAAOC,SAAUA,IACnC,kBAAC,GAAD,CAAYD,MAAOA,EAAOC,SAAUA,IACpC,kBAAC,GAAD,CAAYD,MAAOA,KAErB,uBACEwJ,MAAM,OACNC,KAAK,SACLC,SAhEe,SAACC,GACxBT,EAAkBS,EAAKvD,MAgEfwD,oBAAqB,CAAC,cAEtB,sBAAMC,KAAN,CACEzD,IAAI,YACJnF,UAAW,MACXE,KAAM,kBAAC2I,EAAA,EAAD,OAHR,aAOA,sBAAMD,KAAN,CACEzD,IAAI,QACJnF,UAAW,UACXE,KAAM,kBAAC4I,EAAA,EAAD,OAHR,SAOA,sBAAMF,KAAN,CACEzD,IAAI,SACJnF,UAAW,SACXE,KAAM,kBAAC6I,EAAA,EAAD,OAHR,UAOA,sBAAMH,KAAN,CACEzD,IAAI,SACJnF,UAAW,QACXE,KAAM,kBAAC8I,EAAA,EAAD,OAHR,UAOA,sBAAMJ,KAAN,CAAWzD,IAAI,SAASnF,UAAW,OAAQE,KAAM,kBAAC+I,EAAA,EAAD,OAAjD,UAGA,sBAAML,KAAN,CACEzD,IAAI,YACJnF,UAAW,WACXE,KAAM,kBAACgJ,EAAA,EAAD,OAHR,aAOA,sBAAMN,KAAN,CAAWzD,IAAI,QAAQnF,UAAW,SAAUE,KAAM,kBAACiJ,EAAA,EAAD,OAAlD,SAGA,sBAAMP,KAAN,CACEzD,IAAI,YACJnF,UAAW,UACXE,KAAM,kBAACkJ,EAAA,EAAD,OAHR,eASJ,uBAAQpJ,UAAW,cACA,cAAhBgI,GAAgC,kBAAC,EAAD,MACjC,kBAACJ,GAAD,CAAS5H,UAAW,YAAamI,GACjC,kBAACL,GAAD,CAAQ9H,UAAW,cAAnB,gWAOE,uBAAGqJ,KAAK,kCAAR,0BAPF,4EASQ,uBAAGA,KAAK,sBAAR,aATR,SChJUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAEL,kBAAC,GAAD,MAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArD,GACLsD,QAAQtD,MAAMA,EAAMuD,c","file":"static/js/main.6b34adc5.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Character() {\n    return (\n        <div>This is Character Content</div>\n    )\n}\n\nexport default Character;","import React from 'react';\n\nfunction Combat() {\n    return (\n        <div>This is Combat Content</div>\n    )\n}\n\nexport default Combat;","import React from 'react';\n\nfunction Feats() {\n    return (\n        <div>This is Feats Content</div>\n    )\n}\n\nexport default Feats;","import React from 'react';\n\nfunction Inventory() {\n    return (\n        <div>This is Inventory Content</div>\n    )\n}\n\nexport default Inventory;","export type training = \"U\" | \"T\" | \"E\" | \"M\" | \"L\";\nexport type ability = \"STR\" | \"CON\" | \"DEX\" | \"INT\" | \"WIS\" | \"CHA\";\nexport type spellLevel = \"cantrip\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;\nexport type featCategory =\n  | \"general\"\n  | \"skill\"\n  | \"ancestry\"\n  | \"heritage\"\n  | \"class\"\n  | \"bonus\";\nexport type dieType = { count: number; sides: number };\nexport type costType = { count: number; coin: \"cp\" | \"sp\" | \"gp\" | \"pp\" };\nexport type itemLocation = \"worn\" | \"readied\" | \"other\";\n\nexport enum abilities {\n  STR = \"strength\",\n  CON = \"constitution\",\n  DEX = \"dexterity\",\n  INT = \"intelligence\",\n  WIS = \"wisdom\",\n  CHA = \"charisma\",\n}\n\nexport type skillType = {\n  name: string;\n  training: training;\n  ability: abilities | null;\n  misc_bonus: number;\n};\n\nexport type featType = {\n  name: string;\n  type: featCategory | null;\n  level: number;\n  traits: string[];\n  description: string;\n  action: boolean;\n  action_cost?: number;\n};\n\nexport type spellType = {\n  name: string;\n  level: spellLevel;\n  traits: string[];\n  description: string;\n  action_cost: number;\n};\n\nexport type spellSlotType = {\n  level: spellLevel;\n  max: number;\n  unused: number;\n};\n\nexport type noteType = {\n  id: number;\n  title: string;\n  text: string;\n};\n\nexport type itemType = {\n  name: string;\n  quantity: number;\n  bulk: number | \"L\";\n  cost: costType;\n  description: string;\n  location: itemLocation;\n};\n\nexport type containerItemType = itemType & {\n  contains: itemType[];\n};\n\nexport type attackType = {\n  name: string;\n  ability: ability;\n  atk_bonus: number;\n  atk_misc: number;\n  prof: training;\n  dice: dieType;\n  dmg_bonus: number;\n  dmg_misc: number;\n};\n\nexport type characterType = {\n  name: string;\n  ancestry: string;\n  heritage: string;\n  class: string;\n  level: number;\n  hero_points: number;\n  abilities: {\n    strength: number;\n    constitution: number;\n    dexterity: number;\n    intelligence: number;\n    wisdom: number;\n    charisma: number;\n  };\n};\n\nexport type featsList = {\n  class: featType[];\n  general: featType[];\n  skill: featType[];\n  ancestry: featType[];\n  heritage: featType[];\n  bonus: featType[];\n};\n\nexport type attacksListType = {\n  melee: attackType[];\n  ranged: attackType[];\n};\n\nexport type combatType = {\n  attacks: attacksListType;\n};\n\nexport type spellsListType = {\n  cantrip_level: number;\n  casting_ability: ability | null;\n  slots: spellSlotType[];\n  spells: spellType[];\n};\n\nexport type inventoryType = {\n  bulk: {\n    current: number;\n    encumbered: number;\n    max: number;\n  };\n  coin: {\n    copper: number;\n    silver: number;\n    gold: number;\n    platinum: number;\n  };\n  worn: itemType[];\n  readied: itemType[];\n  other: itemType[];\n  containers: containerItemType[];\n};\n\nexport type notesListType = {\n  general: noteType;\n  other: noteType[];\n};\n\nexport type mainStateType = {\n  character: characterType;\n  feats: featsList;\n  skills: skillType[];\n  combat: combatType;\n  spells: spellsListType;\n  inventory: inventoryType;\n  notes: notesListType;\n};\n","import React, { useState } from \"react\";\nimport { cloneDeep, debounce, isNull } from \"lodash\";\nimport { Card, Button, Input } from \"antd\";\nimport { EditFilled, CheckOutlined } from \"@ant-design/icons\";\n\nimport { WithReducerProps } from '../common/interfaces';\n\nconst { TextArea } = Input;\n\nexport interface GeneralNotesProps extends WithReducerProps {}\n\nconst GeneralNotes = ({ state, dispatch }: GeneralNotesProps) => {\n  const [editing, setEditing] = useState(false);\n\n  const changeGeneral = (newText: string | null = null) => {\n    let newGeneralNote = cloneDeep(state.notes.general);\n\n    if (!isNull(newText)) {\n      newGeneralNote.text = newText;\n    }\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: true,\n        value: newGeneralNote,\n      },\n    });\n  };\n\n  const debouncedUpdate = debounce(changeGeneral, 300);\n\n  const toggleEditing = () => {\n    if (editing) {\n      debouncedUpdate.flush();\n      setEditing(false);\n    } else {\n      setEditing(true);\n    }\n  };\n\n  return (\n    <div className={\"general-notes\"}>\n      <Card\n        title={\n          <div className={\"card-header\"}>\n            {state.notes.general.title}\n            <Button\n              type={\"primary\"}\n              className={editing ? \"green-button\" : \"blue-button\"}\n              icon={editing ? <CheckOutlined /> : <EditFilled />}\n              onClick={toggleEditing}\n            />\n          </div>\n        }\n      >\n        {editing ? (\n          <TextArea\n            className={\"general-notes-edit\"}\n            defaultValue={state.notes.general.text}\n            autoSize={{ minRows: 10, maxRows: 35 }}\n            onChange={(e) => {\n              e.persist();\n              debouncedUpdate(e.target.value);\n            }}\n          />\n        ) : (\n          <p className={\"note-body\"}>{state.notes.general.text}</p>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default GeneralNotes;\n","import { cloneDeep } from \"lodash\";\n\nimport {\n  skillType,\n  featType,\n  spellType,\n  noteType,\n  itemType,\n  attackType,\n  mainStateType,\n  abilities,\n} from \"./types\";\n\nexport const baseSkill: skillType = {\n  name: \"\",\n  training: \"U\",\n  ability: null,\n  misc_bonus: 0,\n};\n\nexport const baseFeat: featType = {\n  name: \"\",\n  type: null,\n  level: 0,\n  traits: [],\n  description: \"\",\n  action: false,\n  action_cost: 0,\n};\n\nexport const baseSpell: spellType = {\n  name: \"\",\n  level: \"cantrip\",\n  traits: [],\n  description: \"\",\n  action_cost: 1,\n};\n\nexport const baseNote: noteType = {\n  id: 0,\n  title: \"\",\n  text: \"\",\n};\n\nexport const baseItem: itemType = {\n  name: \"\",\n  quantity: 1,\n  bulk: 0.0,\n  cost: {\n    count: 0,\n    coin: \"gp\",\n  },\n  description: \"\",\n  location: \"other\",\n};\n\nexport const baseAttack: attackType = {\n  name: \"\",\n  ability: \"STR\",\n  atk_bonus: 0,\n  atk_misc: 0,\n  prof: \"U\",\n  dice: {\n    count: 1,\n    sides: 6,\n  },\n  dmg_bonus: 0,\n  dmg_misc: 0,\n};\n\nexport const mainStateDefault: mainStateType = {\n  character: {\n    name: \"\",\n    ancestry: \"\",\n    heritage: \"\",\n    class: \"\",\n    level: 1,\n    hero_points: 0,\n    abilities: {\n      strength: 10,\n      constitution: 10,\n      dexterity: 10,\n      intelligence: 10,\n      wisdom: 10,\n      charisma: 10,\n    },\n  },\n  feats: {\n    class: [],\n    general: [],\n    skill: [],\n    ancestry: [],\n    heritage: [],\n    bonus: [],\n  },\n  skills: [\n    {\n      ...cloneDeep(baseSkill),\n      name: \"acrobatics\",\n      ability: abilities.DEX,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"arcana\",\n      ability: abilities.INT,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"athletics\",\n      ability: abilities.STR,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"crafting\",\n      ability: abilities.INT,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"deception\",\n      ability: abilities.CHA,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"diplomacy\",\n      ability: abilities.CHA,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"intimidation\",\n      ability: abilities.CHA,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"lore\",\n      ability: abilities.INT,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"medicine\",\n      ability: abilities.WIS,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"nature\",\n      ability: abilities.WIS,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"occultism\",\n      ability: abilities.INT,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"performance\",\n      ability: abilities.CHA,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"religion\",\n      ability: abilities.WIS,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"society\",\n      ability: abilities.INT,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"stealth\",\n      ability: abilities.DEX,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"survival\",\n      ability: abilities.WIS,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"thievery\",\n      ability: abilities.DEX,\n    },\n  ],\n  combat: {\n    attacks: {\n      melee: [],\n      ranged: [],\n    },\n  },\n  spells: {\n    cantrip_level: 1,\n    casting_ability: null,\n    slots: [\n      {\n        level: \"cantrip\",\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 1,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 2,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 3,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 4,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 5,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 6,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 7,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 8,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 9,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 10,\n        max: 0,\n        unused: 0,\n      },\n    ],\n    spells: [],\n  },\n  inventory: {\n    bulk: {\n      current: 0.0,\n      encumbered: 5.0,\n      max: 8.0,\n    },\n    coin: {\n      copper: 0,\n      silver: 0,\n      gold: 15,\n      platinum: 0,\n    },\n    worn: [],\n    readied: [],\n    other: [],\n    containers: [],\n  },\n  notes: {\n    general: {\n      ...cloneDeep(baseNote),\n      title: \"General Notes\",\n      text: \"Here are your general notes!\",\n    },\n    other: [],\n  },\n};\n","import React, { useState, useEffect } from \"react\";\nimport { map, debounce, cloneDeep, findIndex, without } from \"lodash\";\nimport { Card, Button, Input } from \"antd\";\nimport {\n  EditFilled,\n  PlusOutlined,\n  CloseOutlined,\n  CheckOutlined,\n} from \"@ant-design/icons\";\n\nimport { baseNote } from \"../common/defaults\";\nimport { WithReducerProps } from \"../common/interfaces\";\nimport { noteType } from '../common/types';\n\nconst { TextArea } = Input;\n\nexport interface OtherNotesProps extends WithReducerProps {}\n\nconst OtherNotes = ({ state, dispatch }: OtherNotesProps) => {\n  const [editing, setEditing] = useState(0);\n\n  useEffect(() => {\n    if (state.notes.other.length === 0) {\n      addOther();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  const addOther = () => {\n    let newOtherNotes = [...state.notes.other];\n    let newNote = {\n      ...cloneDeep(baseNote),\n      id: newOtherNotes.length + 1,\n      title: \"New Note\",\n      text: \"Write here!\",\n    };\n\n    newOtherNotes.push(newNote);\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: newOtherNotes,\n      },\n    });\n  };\n\n  const updateOtherTitle = (id: number, title: string) => {\n    let newOtherNotes = [...state.notes.other];\n    let updateIndex = findIndex(newOtherNotes, [\"id\", id]);\n    let updatedNote = cloneDeep(newOtherNotes[updateIndex]);\n\n    updatedNote.title = title;\n\n    newOtherNotes[updateIndex] = updatedNote;\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: newOtherNotes,\n      },\n    });\n  };\n\n  const updateOtherText = (id: number, text: string) => {\n    let newOtherNotes = [...state.notes.other];\n    let updateIndex = findIndex(newOtherNotes, [\"id\", id]);\n    let updatedNote = cloneDeep(newOtherNotes[updateIndex]);\n\n    updatedNote.text = text;\n\n    newOtherNotes[updateIndex] = updatedNote;\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: newOtherNotes,\n      },\n    });\n  };\n\n  const removeOther = (note: noteType) => {\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: without(state.notes.other, note),\n      },\n    });\n  };\n\n  const debouncedUpdateTitle = debounce(updateOtherTitle, 300);\n  const debouncedUpdateText = debounce(updateOtherText, 300);\n\n  const toggleEditing = (id: number) => {\n    if (editing !== 0) {\n      debouncedUpdateTitle.flush();\n      debouncedUpdateText.flush();\n      setEditing(0);\n    } else {\n      setEditing(id);\n    }\n  };\n\n  return (\n    <div className={\"other-notes\"}>\n      <Card\n        title={\n          <div className={\"card-header\"}>\n            Other Notes\n            <Button\n              type={\"primary\"}\n              className={\"green-button\"}\n              icon={<PlusOutlined />}\n              onClick={addOther}\n            />\n          </div>\n        }\n      >\n        {map(state.notes.other, (note) => {\n          return (\n            <Card\n              key={`other-note-${note.id}`}\n              title={\n                <div className={\"card-header\"}>\n                  {editing === note.id ? (\n                    <Input\n                      className={\"other-notes-edit-title\"}\n                      defaultValue={note.title}\n                      onPressEnter={() => toggleEditing(note.id)}\n                      onChange={(e) => {\n                        e.persist();\n                        debouncedUpdateTitle(note.id, e.target.value);\n                      }}\n                    />\n                  ) : (\n                    note.title\n                  )}\n                  <div className={\"card-header-actions\"}>\n                    <Button\n                      type={\"primary\"}\n                      className={\n                        editing === note.id ? \"green-button\" : \"blue-button\"\n                      }\n                      icon={\n                        editing === note.id ? <CheckOutlined /> : <EditFilled />\n                      }\n                      onClick={() => toggleEditing(note.id)}\n                    />\n                    <Button\n                      type={\"primary\"}\n                      className={\"red-button\"}\n                      icon={<CloseOutlined />}\n                      onClick={() => removeOther(note)}\n                    />\n                  </div>\n                </div>\n              }\n            >\n              {editing === note.id ? (\n                <TextArea\n                  className={\"other-notes-edit-text\"}\n                  defaultValue={note.text}\n                  autoSize={{ minRows: 4 }}\n                  onChange={(e) => {\n                    e.persist();\n                    debouncedUpdateText(note.id, e.target.value);\n                  }}\n                />\n              ) : (\n                <p>{note.text}</p>\n              )}\n            </Card>\n          );\n        })}\n      </Card>\n    </div>\n  );\n};\n\nexport default OtherNotes;\n","import React from \"react\";\n\nimport \"./notes.less\";\nimport GeneralNotes from \"./notes-general\";\nimport OtherNotes from \"./notes-other\";\nimport { WithReducerProps } from \"../common/interfaces\";\n\nexport interface NotesProps extends WithReducerProps {}\n\nconst Notes = ({ state, dispatch }: NotesProps) => {\n  return (\n    <div className={\"notes-content\"}>\n      <GeneralNotes state={state} dispatch={dispatch} />\n      <OtherNotes state={state} dispatch={dispatch} />\n    </div>\n  );\n};\n\nexport default Notes;\n","import React from 'react';\n\nfunction References() {\n    return (\n        <div>This is References Content</div>\n    )\n}\n\nexport default References;","import React from 'react';\n\nfunction Skills() {\n    return (\n        <div>This is Skills Content</div>\n    )\n}\n\nexport default Skills;","import React from 'react';\n\nfunction Spells() {\n    return (\n        <div>This is Spells Content</div>\n    )\n}\n\nexport default Spells;","import React from 'react';\n\nfunction CharHeader() {\n    return (\n        <div>This is CharHeader</div>\n    )\n}\n\nexport default CharHeader;","import React from \"react\";\nimport { isEqual } from \"lodash\";\nimport { Button, Modal, message } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\n\nimport { mainStateDefault } from \"../../common/defaults\";\nimport { WithReducerProps } from \"../../common/interfaces\";\n\nconst { confirm } = Modal;\n\nexport interface NewButtonProps extends WithReducerProps {}\n\nconst NewButton = ({ state, dispatch }: NewButtonProps) => {\n  const newChar = () => {\n    dispatch({ type: \"NEW\" });\n    message.success(\"Created new character!\");\n  };\n\n  const handleNew = () => {\n    if (!isEqual(state, mainStateDefault)) {\n      confirm({\n        title: \"Do you want to override the current character?\",\n        icon: <ExclamationCircleOutlined />,\n        content: \"You will lose any unsaved changes.\",\n        okText: \"Override\",\n        onOk() {\n          newChar();\n        },\n      });\n    } else {\n      message.success(\"Created new character!\");\n    }\n  };\n\n  return (\n    <Button\n      type={\"primary\"}\n      className={\"red-button\"}\n      size={\"small\"}\n      onClick={handleNew}\n    >\n      New\n    </Button>\n  );\n};\n\nexport default NewButton;\n","import React, { useState } from \"react\";\nimport { keys, isEqual, map } from \"lodash\";\nimport { Button, Select, Modal, message } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\n\nimport { mainStateDefault } from \"../../common/defaults\";\nimport { WithReducerProps } from \"../../common/interfaces\";\n\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nexport interface LoadButtonProps extends WithReducerProps {}\n\nconst LoadButton = ({ state, dispatch }: LoadButtonProps) => {\n  const [loadVisible, setLoadVisible] = useState(false);\n  const [toLoadName, setToLoadName] = useState(\"\");\n\n  const loadChar = () => {\n    if(toLoadName) {\n      dispatch({\n        type: 'LOAD',\n        payload: JSON.parse(localStorage[toLoadName])\n      })\n    } else {\n      message.error(\"No character selected!\")\n    }\n  };\n\n  const handleOk = () => {\n    setLoadVisible(false);\n    if (!isEqual(state, mainStateDefault)) {\n      confirm({\n        title: \"Do you want to override the current character?\",\n        icon: <ExclamationCircleOutlined />,\n        content: \"You will lose any unsaved changes.\",\n        okText: \"Override\",\n        onOk() {\n          loadChar();\n        },\n      });\n    } else {\n      loadChar();\n    }\n  };\n\n  const handleOpenModal = () => {\n    if (keys(localStorage).length === 0) {\n      message.info(\"No characters to load.\");\n    } else {\n      setLoadVisible(true);\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        type={\"primary\"}\n        className={\"blue-button\"}\n        size={\"small\"}\n        onClick={handleOpenModal}\n      >\n        Load\n      </Button>\n      <Modal\n        title={\"Load Character\"}\n        visible={loadVisible}\n        closable={false}\n        onOk={handleOk}\n        okText={\"Load\"}\n        onCancel={() => setLoadVisible(false)}\n      >\n        <Select\n          placeholder={\"Select a character\"}\n          onChange={(value: string) => setToLoadName(value)}\n        >\n          {map(keys(localStorage), (name) => {\n            return <Option key={name} value={name}>{name}</Option>;\n          })}\n        </Select>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoadButton;\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { Button, message } from \"antd\";\n\nexport interface SaveButtonProps {\n  state: any;\n}\n\nconst SaveButton = ({ state }: SaveButtonProps) => {\n  const saveChar = () => {\n    localStorage[state.character.name] = JSON.stringify(cloneDeep(state));\n    message.success(\"Saved character!\");\n  };\n\n  return (\n    <Button\n      type={\"primary\"}\n      className={\"green-button\"}\n      size={\"small\"}\n      onClick={saveChar}\n    >\n      Save\n    </Button>\n  );\n};\n\nexport default SaveButton;\n","import { cloneDeep } from \"lodash\";\n\nimport { mainStateDefault } from \"../common/defaults\";\n\ninterface MainReducerProps {\n  (state: any, action: { type: string; payload: any }): any;\n}\n\nexport const MainReducer: MainReducerProps = (state, action) => {\n  switch (action.type) {\n    case \"NEW\": {\n      return cloneDeep(mainStateDefault);\n    }\n\n    case \"LOAD\": {\n      return cloneDeep(action.payload);\n    }\n\n    case \"NOTES\": {\n      // action.payload: {\n      //     general: boolean,\n      //     value: {title: string, text: string} OR {title: string, text: string}[]\n      // }\n      if (action.payload.general) {\n        return {\n          ...state,\n          notes: {\n            ...state.notes,\n            general: cloneDeep(action.payload.value),\n          },\n        };\n      } else {\n        return {\n          ...state,\n          notes: {\n            ...state.notes,\n            other: [...action.payload.value],\n          },\n        };\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { useState, useReducer } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  UserOutlined,\n  FireOutlined,\n  TagsOutlined,\n  BarsOutlined,\n  AlertOutlined,\n  ShoppingOutlined,\n  BookOutlined,\n  FileSearchOutlined,\n} from \"@ant-design/icons\";\n\nimport Character from \"../character/character\";\nimport Combat from \"../combat/combat\";\nimport Feats from \"../feats/feats\";\nimport Inventory from \"../inventory/inventory\";\nimport Notes from \"../notes/notes\";\nimport References from \"../references/references\";\nimport Skills from \"../skills/skills\";\nimport Spells from \"../spells/spells\";\nimport CharHeader from \"../common/components/char-header\";\nimport NewButton from \"./buttons/new-button\";\nimport LoadButton from \"./buttons/load-button\";\nimport SaveButton from \"./buttons/save-button\";\nimport { MainReducer } from \"./main-reducer\";\nimport { mainStateDefault } from \"../common/defaults\";\n\nimport \"./app.less\";\n\nconst { Header, Content, Sider, Footer } = Layout;\n\nconst App = () => {\n  const [currContent, changeCurrContent] = useState(\"character\");\n  const [state, dispatch] = useReducer(MainReducer, mainStateDefault);\n\n  const handleMenuChange = (item: any) => {\n    changeCurrContent(item.key);\n  };\n\n  let mainContent = <div>This is no Content</div>;\n  switch (currContent) {\n    case \"character\":\n      mainContent = <Character />;\n      break;\n\n    case \"feats\":\n      mainContent = <Feats />;\n      break;\n\n    case \"skills\":\n      mainContent = <Skills />;\n      break;\n\n    case \"combat\":\n      mainContent = <Combat />;\n      break;\n\n    case \"spells\":\n      mainContent = <Spells />;\n      break;\n\n    case \"inventory\":\n      mainContent = <Inventory />;\n      break;\n\n    case \"notes\":\n      mainContent = <Notes state={state} dispatch={dispatch} />;\n      break;\n\n    case \"reference\":\n      mainContent = <References />;\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"app\">\n      <Layout>\n        <Sider className={\"app-sider\"}>\n          <div className={\"app-header\"}>\n            <img\n              className={\"logo\"}\n              src={process.env.PUBLIC_URL + \"/logo192.png\"}\n              alt={\n                \"Website icon depicting a gold gear on a dark red square with rounded corners\"\n              }\n            />\n            <Header>PF2 WebSheet</Header>\n          </div>\n          <div className={\"button-group row\"}>\n            <NewButton state={state} dispatch={dispatch} />\n            <LoadButton state={state} dispatch={dispatch} />\n            <SaveButton state={state} />\n          </div>\n          <Menu\n            theme=\"dark\"\n            mode=\"inline\"\n            onSelect={handleMenuChange}\n            defaultSelectedKeys={[\"character\"]}\n          >\n            <Menu.Item\n              key=\"character\"\n              className={\"red\"}\n              icon={<UserOutlined />}\n            >\n              Character\n            </Menu.Item>\n            <Menu.Item\n              key=\"feats\"\n              className={\"volcano\"}\n              icon={<TagsOutlined />}\n            >\n              Feats\n            </Menu.Item>\n            <Menu.Item\n              key=\"skills\"\n              className={\"orange\"}\n              icon={<BarsOutlined />}\n            >\n              Skills\n            </Menu.Item>\n            <Menu.Item\n              key=\"combat\"\n              className={\"green\"}\n              icon={<AlertOutlined />}\n            >\n              Combat\n            </Menu.Item>\n            <Menu.Item key=\"spells\" className={\"blue\"} icon={<FireOutlined />}>\n              Spells\n            </Menu.Item>\n            <Menu.Item\n              key=\"inventory\"\n              className={\"geekblue\"}\n              icon={<ShoppingOutlined />}\n            >\n              Inventory\n            </Menu.Item>\n            <Menu.Item key=\"notes\" className={\"purple\"} icon={<BookOutlined />}>\n              Notes\n            </Menu.Item>\n            <Menu.Item\n              key=\"reference\"\n              className={\"magenta\"}\n              icon={<FileSearchOutlined />}\n            >\n              Reference\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className={\"app-layout\"}>\n          {currContent !== \"character\" && (<CharHeader />)}\n          <Content className={\"app-main\"}>{mainContent}</Content>\n          <Footer className={\"app-footer\"}>\n            This web-app uses trademarks and/or copyrights owned by Paizo Inc.,\n            which are used under Paizo's Community Use Policy. We are expressly\n            prohibited from charging you to use or access this content. This\n            web-app is not published, endorsed, or specifically approved by\n            Paizo Inc. For more information about Paizo's Community Use Policy,\n            please visit&nbsp;\n            <a href=\"https://paizo.com/communityuse\">paizo.com/communityuse</a>.\n            For more information about Paizo Inc. and Paizo products, please\n            visit <a href=\"https://paizo.com/\">paizo.com</a>.\n          </Footer>\n        </Layout>\n      </Layout>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.less\";\nimport App from \"./components/app/app\";\nimport * as serviceWorker from \"./tests/serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/character/character-portrait.tsx","components/character/character-info.tsx","components/common/components/weapon-prof.tsx","components/common/types.tsx","components/common/defaults.tsx","components/common/utils.tsx","components/character/character-details.tsx","components/character/character-form.tsx","components/character/character.tsx","components/combat/combat.tsx","components/feats/feats.tsx","components/inventory/inventory.tsx","components/notes/notes-general.tsx","components/notes/notes-other.tsx","components/notes/notes.tsx","components/references/references.tsx","components/skills/skills.tsx","components/spells/spells.tsx","components/common/components/char-header.tsx","components/app/buttons/new-button.tsx","components/app/buttons/load-button.tsx","components/app/buttons/save-button.tsx","components/app/main-reducer.tsx","components/app/app.tsx","tests/serviceWorker.js","index.js"],"names":["CharacterPortrait","state","dispatch","useState","imageUrl","setImageURL","loading","setLoading","outerReader","FileReader","onloadend","console","log","result","useEffect","character","portrait","type","payload","className","name","listType","showUploadList","onChange","info","file","status","originFileObj","isNil","readAsDataURL","title","src","alt","LoadingOutlined","UploadOutlined","CharacterInfo","ancestry","heritage","background","charClass","class","level","exp","hero_points","size","diety","alignment","bordered","column","label","startCase","WeaponProf","abilities","proficiency","disable","setProf","training","styleProps","display","flexDirection","alignItems","justifyContent","marginRight","maxWidth","width","fontSize","style","paddingBottom","Group","value","disabled","baseSkill","ability","misc_bonus","armor_penalty","baseNote","id","text","mainStateDefault","default","traits","details","languages","weapon_training","strength","constitution","dexterity","intelligence","wisdom","charisma","feats","general","skill","bonus","skills","cloneDeep","DEX","INT","STR","CHA","WIS","combat","hp","current","max","temp","armor","ac_bonus","check_penalty","dex_cap","group","speed_penalty","class_dc","perception","item_bonus","senses","saves","fortitude","itemBonus","miscBonus","reflex","will","speed","base","types","attacks","melee","ranged","spells","cantrip_level","spell_training","casting_ability","slots","unused","inventory","bulk","encumbered","coin","copper","silver","gold","platinum","worn","readied","other","containers","notes","getAbilityMod","mod","Math","floor","getDefaultChar","returnChar","forEach","keys","localStorage","char","JSON","parse","setAndGetDefaultChar","CharacterDetails","str","dex","con","int","wis","cha","layout","getMod","span","map","prof","key","Option","TextArea","CharacterForm","setEditing","useForm","form","weaponSelect","useCallback","flatterChar","assignIn","omit","window","innerHeight","initialValues","wrapperCol","offset","colon","gutter","Item","rules","required","message","placeholder","min","autoSize","minRows","maxRows","onClick","newChar","getFieldsValue","weapProf","Character","editing","extra","icon","EditFilled","Combat","Feats","Inventory","GeneralNotes","debouncedUpdate","debounce","newText","newGeneralNote","isNull","CheckOutlined","flush","defaultValue","e","persist","target","OtherNotes","length","addOther","newOtherNotes","newNote","push","debouncedUpdateTitle","updateIndex","findIndex","updatedNote","debouncedUpdateText","toggleEditing","PlusOutlined","note","onPressEnter","CloseOutlined","without","removeOther","Notes","References","Skills","Spells","CharHeader","confirm","NewButton","isEqual","success","ExclamationCircleOutlined","content","okText","onOk","LoadButton","loadVisible","setLoadVisible","toLoadName","setToLoadName","makeDefault","setMakeDefault","loadChar","error","visible","closable","onCancel","checked","SaveButton","stringify","saveLocalChar","MainReducer","action","newState","newCharacter","newNotes","sessionStorage","saveSessionChar","Header","Content","Sider","Footer","App","currContent","changeCurrContent","collapsed","setCollapsed","useReducer","includes","found","checkForDefault","mainContent","collapsible","onCollapse","process","theme","mode","onSelect","item","defaultSelectedKeys","UserOutlined","TagsOutlined","BarsOutlined","AlertOutlined","FireOutlined","ShoppingOutlined","BookOutlined","FileSearchOutlined","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cbfe135d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Upload, Tooltip } from \"antd\";\nimport { LoadingOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { UploadChangeParam } from \"antd/lib/upload\";\nimport ImgCrop from \"antd-img-crop\";\nimport { isNil } from \"lodash\";\n\nimport { WithReducerProps } from \"../common/interfaces\";\nimport { UploadFile } from \"antd/lib/upload/interface\";\n\nexport interface CharacterPortraitProps extends WithReducerProps {}\n\nfunction CharacterPortrait({ state, dispatch }: CharacterPortraitProps) {\n  const [imageUrl, setImageURL] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const outerReader = new FileReader();\n  outerReader.onloadend = () => {\n    console.log(\"finished read!\");\n    if (typeof outerReader.result === \"string\") {\n      setImageURL(outerReader.result);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (state.character.portrait && !imageUrl) {\n      setImageURL(state.character.portrait);\n    }\n  }, [state, imageUrl, setImageURL]);\n\n  useEffect(() => {\n    if (imageUrl && imageUrl !== state.character.portrait) {\n      console.log(\"dispatching portrait!\");\n      dispatch({\n        type: \"PORTRAIT\",\n        payload: imageUrl,\n      });\n    }\n  }, [imageUrl, dispatch, state.character.portrait]);\n\n  const handlePortraitChange = (info: UploadChangeParam) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === \"done\") {\n      let file = info.file.originFileObj;\n      if (!isNil(file)) {\n        console.log(\"starting read now!\");\n        outerReader.readAsDataURL(file);\n      }\n    }\n  };\n\n  const handlePortraitPreview = async (file: UploadFile<any>) => {\n    let src = file.url;\n    if (isNil(src)) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          if (typeof reader.result === \"string\") {\n            console.log(\"resolving preview now!\");\n            resolve(reader.result);\n          }\n        };\n\n        if (!isNil(file.originFileObj)) {\n          console.log(\"starting preview read now!\");\n          reader.readAsDataURL(file.originFileObj);\n        }\n      });\n    }\n\n    if (src) {\n      console.log(\"setting up preview display!\");\n      console.log({ src });\n      const image = new Image();\n      image.src = src;\n      const imgWindow = window.open(src);\n      imgWindow?.document.write(image.outerHTML);\n    }\n  };\n\n  return (\n    <div className={\"character-portrait\"}>\n      {/* <ImgCrop rotate={true}> */}\n        <Upload\n          name={\"portrait\"}\n          listType={\"picture-card\"}\n          className={\n            imageUrl ? \"portrait-uploader uploaded\" : \"portrait-uploader\"\n          }\n          showUploadList={false}\n          onChange={handlePortraitChange}\n          // onPreview={handlePortraitPreview}\n        >\n          {imageUrl ? (\n            <Tooltip title={\"Replace image?\"}>\n              <img\n                src={imageUrl}\n                alt={`Portrait for ${state.character.name}`}\n              />\n            </Tooltip>\n          ) : (\n            <div className={\"portrait-prompt\"}>\n              {loading ? <LoadingOutlined /> : <UploadOutlined />}\n              <div>Upload</div>\n            </div>\n          )}\n        </Upload>\n      {/* </ImgCrop> */}\n    </div>\n  );\n}\n\nexport default CharacterPortrait;\n","import React from \"react\";\nimport { startCase } from \"lodash\";\nimport { Descriptions } from \"antd\";\nimport DescriptionsItem from \"antd/lib/descriptions/Item\";\n\nimport CharacterPortrait from \"./character-portrait\";\nimport { WithReducerProps } from \"../common/interfaces\";\n\nexport interface CharacterInfoProps extends WithReducerProps {}\n\nfunction CharacterInfo({ state, dispatch }: CharacterInfoProps) {\n  const {\n    ancestry,\n    heritage,\n    background,\n    class: charClass,\n    level,\n    exp,\n    hero_points,\n    size,\n    diety,\n    alignment,\n  } = state.character;\n\n  return (\n    <div className={\"character-info\"}>\n      <CharacterPortrait state={state} dispatch={dispatch} />\n      <Descriptions className={\"info-fields\"} bordered={true} size={\"small\"} column={2}>\n        <DescriptionsItem label={\"Level\"}>{level}</DescriptionsItem>\n        <DescriptionsItem label={\"Class\"}>{charClass}</DescriptionsItem>\n        <DescriptionsItem label={\"Ancestry\"}>{ancestry}</DescriptionsItem>\n        <DescriptionsItem label={\"Heritage\"}>{heritage}</DescriptionsItem>\n        <DescriptionsItem label={\"Background\"}>{background}</DescriptionsItem>\n        <DescriptionsItem label={\"Deity\"}>{diety}</DescriptionsItem>\n        <DescriptionsItem label={\"Size\"}>{startCase(size)}</DescriptionsItem>\n        <DescriptionsItem label={\"Exp\"}>{exp}</DescriptionsItem>\n        <DescriptionsItem label={\"Alignment\"}>{alignment}</DescriptionsItem>\n        <DescriptionsItem label={\"Hero Points\"}>{hero_points}</DescriptionsItem>\n      </Descriptions>\n    </div>\n  );\n}\n\nexport default CharacterInfo;\n","import React, { CSSProperties } from \"react\";\nimport { startCase } from \"lodash\";\nimport { Radio } from \"antd\";\n\nimport { trainingType, proficiency as profLevel } from '../types';\n\nexport interface WeaponProfProps {\n  proficiency: trainingType;\n  disable?: boolean;\n  setProf?(prof: profLevel): void\n}\n\nfunction WeaponProf({ proficiency, disable=true, setProf }: WeaponProfProps) {\n  const { name, training } = proficiency;\n  const styleProps: CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginRight: 0,\n    maxWidth: \"25px\",\n    width: \"25px\",\n    fontSize: \"10px\",\n  };\n\n  return (\n    <div\n      style={{\n        marginRight: \"10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <div style={{ paddingBottom: \"3px\", fontSize: \"13px\" }}>\n        {startCase(name)}\n      </div>\n      <Radio.Group\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\n        name={name}\n        value={training}\n        size={\"small\"}\n      >\n        <Radio style={styleProps} value={\"U\"} disabled={disable && training !== \"U\"}>\n          U\n        </Radio>\n        <Radio style={styleProps} value={\"T\"} disabled={disable && training !== \"T\"}>\n          T\n        </Radio>\n        <Radio style={styleProps} value={\"E\"} disabled={disable && training !== \"E\"}>\n          E\n        </Radio>\n        <Radio style={styleProps} value={\"M\"} disabled={disable && training !== \"M\"}>\n          M\n        </Radio>\n        <Radio style={styleProps} value={\"L\"} disabled={disable && training !== \"L\"}>\n          L\n        </Radio>\n      </Radio.Group>\n    </div>\n  );\n}\n\nexport default WeaponProf;\n","import { mainReducerActionType } from \"../app/main-reducer\";\n\nexport type proficiency = \"U\" | \"T\" | \"E\" | \"M\" | \"L\";\nexport type ability = \"STR\" | \"CON\" | \"DEX\" | \"INT\" | \"WIS\" | \"CHA\";\nexport type spellLevel = \"cantrip\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;\nexport type featCategory =\n  | \"general\"\n  | \"skill\"\n  | \"ancestry\"\n  | \"heritage\"\n  | \"class\"\n  | \"bonus\";\nexport type dieType = { count: number; sides: number };\nexport type costType = { count: number; coin: \"cp\" | \"sp\" | \"gp\" | \"pp\" };\nexport type itemLocation = \"worn\" | \"readied\" | \"other\";\nexport type armorTypes = \"unarmored\" | \"light\" | \"medium\" | \"heavy\";\nexport type armorGroups = \"leather\" | \"composite\" | \"chain\" | \"plate\" | \"none\";\nexport type actionCategory =\n  | \"free\"\n  | \"reaction\"\n  | \"one-action\"\n  | \"two-action\"\n  | \"three-action\";\nexport type physicalDamageTypes =\n  | \"bludgeoning\"\n  | \"piercing\"\n  | \"slashing\"\n  | \"precision\";\nexport type magicDamageTypes =\n  | \"acid\"\n  | \"cold\"\n  | \"electricity\"\n  | \"fire\"\n  | \"sonic\"\n  | \"positive\"\n  | \"negative\"\n  | \"force\"\n  | \"good\"\n  | \"evil\"\n  | \"lawful\"\n  | \"chaotic\"\n  | \"mental\"\n  | \"poison\"\n  | \"bleed\";\n\nexport enum abilities {\n  STR = \"strength\",\n  CON = \"constitution\",\n  DEX = \"dexterity\",\n  INT = \"intelligence\",\n  WIS = \"wisdom\",\n  CHA = \"charisma\",\n}\n\nexport type dispatchActionType = {\n  type: mainReducerActionType;\n  payload?: any;\n};\n\nexport type dcType = {\n  ability: ability;\n  training: proficiency;\n  misc_bonus: number;\n};\n\nexport type actionType = {\n  name: string;\n  traits: string[];\n  description: string;\n  actions: actionCategory;\n};\n\nexport type skillType = {\n  name: string;\n  training: proficiency;\n  ability: abilities | null;\n  misc_bonus: number;\n  armor_penalty: boolean;\n};\n\nexport type featType = {\n  name: string;\n  type: featCategory | null;\n  level: number;\n  traits: string[];\n  description: string;\n};\n\nexport type spellType = actionType & {\n  level: spellLevel;\n  dice?: dieType[];\n  damage?: magicDamageTypes;\n};\n\nexport type spellSlotType = {\n  level: spellLevel;\n  max: number;\n  unused: number;\n};\n\nexport type noteType = {\n  id: number;\n  title: string;\n  text: string;\n};\n\nexport type itemType = {\n  name: string;\n  level: number;\n  quantity: number;\n  bulk: number | \"L\";\n  cost: costType;\n  description: string;\n  location: itemLocation;\n};\n\nexport type containerItemType = itemType & {\n  contains: itemType[];\n};\n\nexport type attackType = actionType & {\n  ability: ability;\n  atk_bonus: number;\n  atk_misc: number;\n  prof: proficiency;\n  dice: dieType;\n  damage: physicalDamageTypes;\n  dmg_bonus: number;\n  dmg_misc: number;\n  crit_effect: boolean;\n};\n\nexport type trainingType = {\n  name: string,\n  training: proficiency,\n}\n\nexport type characterType = {\n  name: string;\n  portrait: string;\n  ancestry: string;\n  heritage: string;\n  class: string;\n  background: string;\n  diety: string;\n  alignment: \"LG\" | \"NG\" | \"CG\" | \"LN\" | \"N\" | \"CN\" | \"LE\" | \"NE\" | \"CE\";\n  size: \"small\" | \"medium\" | \"large\";\n  traits: string;\n  level: number;\n  exp: number;\n  hero_points: number;\n  languages: string;\n  details: string;\n  weapon_training: trainingType[];\n  abilities: {\n    strength: number;\n    constitution: number;\n    dexterity: number;\n    intelligence: number;\n    wisdom: number;\n    charisma: number;\n  };\n};\n\nexport type featsList = {\n  class: featType[];\n  general: featType[];\n  skill: featType[];\n  ancestry: featType[];\n  heritage: featType[];\n  bonus: featType[];\n};\n\nexport type attacksListType = {\n  melee: attackType[];\n  ranged: attackType[];\n};\n\nexport type savingRollType = {\n  training: proficiency;\n  itemBonus: number;\n  miscBonus: number;\n};\n\nexport type hpType = {\n  max: number;\n  current: number;\n  temp: number;\n};\n\nexport type speedType = {\n  base: number;\n  types: string;\n  misc_bonus: number;\n};\n\nexport type perceptionType = dcType & {\n  item_bonus: number;\n  senses: string;\n};\n\nexport type saveSetType = {\n  fortitude: savingRollType;\n  reflex: savingRollType;\n  will: savingRollType;\n};\n\nexport type shieldType = {\n  bonus: number;\n  hardness: number;\n  max_hp: number;\n  hp: number;\n  bt: number;\n};\n\nexport type armorType = {\n  type: armorTypes;\n  group: armorGroups;\n  training: proficiency;\n  ac_bonus: number;\n  dex_cap: number | null;\n  misc_bonus: number;\n  check_penalty: number;\n  speed_penalty: number;\n  traits: string[];\n  shield?: shieldType;\n};\n\nexport type combatType = {\n  hp: hpType;\n  class_dc: dcType | null;\n  speed: speedType;\n  perception: perceptionType;\n  saves: saveSetType;\n  armor: armorType;\n  attacks: attacksListType;\n};\n\nexport type spellsListType = {\n  cantrip_level: number;\n  casting_ability: ability | null;\n  spell_training: proficiency;\n  slots: spellSlotType[];\n  spells: spellType[];\n};\n\nexport type inventoryType = {\n  bulk: {\n    current: number;\n    encumbered: number;\n    max: number;\n  };\n  coin: {\n    copper: number;\n    silver: number;\n    gold: number;\n    platinum: number;\n  };\n  worn: itemType[];\n  readied: itemType[];\n  other: itemType[];\n  containers: containerItemType[];\n};\n\nexport type notesListType = {\n  general: noteType;\n  other: noteType[];\n};\n\nexport type mainStateType = {\n  default: boolean;\n  character: characterType;\n  feats: featsList;\n  skills: skillType[];\n  combat: combatType;\n  spells: spellsListType;\n  inventory: inventoryType;\n  notes: notesListType;\n};\n","import { cloneDeep } from \"lodash\";\n\nimport {\n  skillType,\n  featType,\n  spellType,\n  noteType,\n  itemType,\n  attackType,\n  mainStateType,\n  abilities,\n} from \"./types\";\n\nexport const baseSkill: skillType = {\n  name: \"\",\n  training: \"U\",\n  ability: null,\n  misc_bonus: 0,\n  armor_penalty: false,\n};\n\nexport const baseFeat: featType = {\n  name: \"\",\n  type: null,\n  level: 0,\n  traits: [],\n  description: \"\",\n};\n\nexport const baseSpell: spellType = {\n  name: \"\",\n  level: \"cantrip\",\n  traits: [],\n  description: \"\",\n  actions: \"one-action\",\n};\n\nexport const baseNote: noteType = {\n  id: 0,\n  title: \"\",\n  text: \"\",\n};\n\nexport const baseItem: itemType = {\n  name: \"\",\n  level: 0,\n  quantity: 1,\n  bulk: 0.0,\n  cost: {\n    count: 0,\n    coin: \"gp\",\n  },\n  description: \"\",\n  location: \"other\",\n};\n\nexport const baseAttack: attackType = {\n  name: \"\",\n  ability: \"STR\",\n  description: \"\",\n  actions: \"one-action\",\n  traits: [],\n  damage: \"slashing\",\n  atk_bonus: 0,\n  atk_misc: 0,\n  prof: \"U\",\n  dice: {\n    count: 1,\n    sides: 6,\n  },\n  dmg_bonus: 0,\n  dmg_misc: 0,\n  crit_effect: false,\n};\n\nexport const mainStateDefault: mainStateType = {\n  default: false,\n  character: {\n    name: \"\",\n    portrait: \"\",\n    ancestry: \"\",\n    heritage: \"\",\n    class: \"Commoner\",\n    background: \"\",\n    diety: \"\",\n    alignment: \"N\",\n    size: \"medium\",\n    traits: \"\",\n    level: 1,\n    exp: 0,\n    hero_points: 0,\n    details: \"\",\n    languages: \"Common\",\n    weapon_training: [\n      {\n        name: \"simple\",\n        training: \"U\",\n      },\n      {\n        name: \"martial\",\n        training: \"U\",\n      },\n      {\n        name: \"unarmed\",\n        training: \"U\",\n      }\n    ],\n    abilities: {\n      strength: 10,\n      constitution: 10,\n      dexterity: 10,\n      intelligence: 10,\n      wisdom: 10,\n      charisma: 10,\n    },\n  },\n  feats: {\n    class: [],\n    general: [],\n    skill: [],\n    ancestry: [],\n    heritage: [],\n    bonus: [],\n  },\n  skills: [\n    {\n      ...cloneDeep(baseSkill),\n      name: \"acrobatics\",\n      ability: abilities.DEX,\n      armor_penalty: true,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"arcana\",\n      ability: abilities.INT,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"athletics\",\n      ability: abilities.STR,\n      armor_penalty: true,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"crafting\",\n      ability: abilities.INT,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"deception\",\n      ability: abilities.CHA,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"diplomacy\",\n      ability: abilities.CHA,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"intimidation\",\n      ability: abilities.CHA,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"medicine\",\n      ability: abilities.WIS,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"nature\",\n      ability: abilities.WIS,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"occultism\",\n      ability: abilities.INT,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"performance\",\n      ability: abilities.CHA,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"religion\",\n      ability: abilities.WIS,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"society\",\n      ability: abilities.INT,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"stealth\",\n      ability: abilities.DEX,\n      armor_penalty: true,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"survival\",\n      ability: abilities.WIS,\n    },\n    {\n      ...cloneDeep(baseSkill),\n      name: \"thievery\",\n      ability: abilities.DEX,\n      armor_penalty: true,\n    },\n  ],\n  combat: {\n    hp: {\n      current: 0,\n      max: 0,\n      temp: 0\n    },\n    armor: {\n      ac_bonus: 0,\n      check_penalty: 0,\n      dex_cap: null,\n      group: \"none\",\n      misc_bonus: 0,\n      speed_penalty: 0,\n      training: \"U\",\n      traits: [],\n      type: \"unarmored\",\n    },\n    class_dc: null,\n    perception: {\n      ability: \"WIS\",\n      training: \"U\",\n      item_bonus: 0,\n      misc_bonus: 0,\n      senses: \"\"\n    },\n    saves: {\n      fortitude: {\n        training: \"U\",\n        itemBonus: 0,\n        miscBonus: 0\n      },\n      reflex: {\n        training: \"U\",\n        itemBonus: 0,\n        miscBonus: 0\n      },\n      will: {\n        training: \"U\",\n        itemBonus: 0,\n        miscBonus: 0\n      }\n    },\n    speed: {\n      base: 25,\n      misc_bonus: 0,\n      types: \"\"\n    },\n    attacks: {\n      melee: [],\n      ranged: [],\n    },\n  },\n  spells: {\n    cantrip_level: 1,\n    spell_training: \"U\",\n    casting_ability: null,\n    slots: [\n      {\n        level: \"cantrip\",\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 1,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 2,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 3,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 4,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 5,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 6,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 7,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 8,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 9,\n        max: 0,\n        unused: 0,\n      },\n      {\n        level: 10,\n        max: 0,\n        unused: 0,\n      },\n    ],\n    spells: [],\n  },\n  inventory: {\n    bulk: {\n      current: 0.0,\n      encumbered: 5.0,\n      max: 8.0,\n    },\n    coin: {\n      copper: 0,\n      silver: 0,\n      gold: 15,\n      platinum: 0,\n    },\n    worn: [],\n    readied: [],\n    other: [],\n    containers: [],\n  },\n  notes: {\n    general: {\n      ...cloneDeep(baseNote),\n      title: \"General Notes\",\n      text: \"Here are your general notes!\",\n    },\n    other: [],\n  },\n};\n","import { message } from \"antd\";\nimport { cloneDeep, forEach, keys } from \"lodash\";\n\nimport { mainStateDefault } from \"./defaults\";\nimport { mainStateType } from \"./types\";\n\nexport const getAbilityMod = (mod: number): string => {\n  const value = Math.floor(mod / 2) - 5;\n\n  if (value >= 0) {\n    return `+${value}`;\n  } else {\n    return `-${value}`;\n  }\n};\n\nexport const saveLocalChar = (state: mainStateType) => {\n  localStorage[state.character.name] = JSON.stringify(cloneDeep(state));\n  message.success(\"Saved character!\");\n};\n\nexport const saveSessionChar = (state: mainStateType) => {\n  sessionStorage[\"lastChar\"] = JSON.stringify(cloneDeep(state));\n};\n\nexport const checkForSessionChar = (): boolean => {\n  return keys(sessionStorage).includes(\"lastChar\");\n};\n\nexport const getSessionChar = (): mainStateType => {\n  return JSON.parse(sessionStorage[\"lastChar\"]);\n};\n\nexport const checkForDefault = (): boolean => {\n  let found = false;\n  forEach(keys(localStorage), (char: string) => {\n    const character = JSON.parse(localStorage[char]);\n    if (character.default) {\n      found = true;\n      return false;\n    }\n  });\n  return found;\n};\n\nexport const checkIfDefault = (name: string): boolean => {\n  const character = JSON.parse(localStorage[name]);\n  if (character.default) {\n    return true;\n  }\n  return false;\n};\n\nexport const getDefaultChar = (): mainStateType => {\n  let returnChar = mainStateDefault;\n  forEach(keys(localStorage), (char: string) => {\n    const character = JSON.parse(localStorage[char]);\n    if (character.default) {\n      returnChar = character;\n    }\n  });\n  return returnChar;\n};\n\nexport const setAndGetDefaultChar = (name: string): mainStateType => {\n  let returnChar = mainStateDefault;\n  forEach(keys(localStorage), (char: string) => {\n    let character = JSON.parse(localStorage[char]);\n    if (character.character.name === name) {\n      character.default = true;\n      returnChar = character;\n    }\n  });\n  return returnChar;\n};\n","import React from \"react\";\nimport { map } from \"lodash\";\nimport { Descriptions } from \"antd\";\nimport DescriptionsItem from \"antd/lib/descriptions/Item\";\n\nimport { WithReducerProps } from \"../common/interfaces\";\nimport WeaponProf from \"../common/components/weapon-prof\";\nimport { trainingType } from \"../common/types\";\nimport { getAbilityMod as getMod } from \"../common/utils\";\n\nexport interface CharacterDetailsProps extends WithReducerProps {}\n\nfunction CharacterDetails({ state, dispatch }: CharacterDetailsProps) {\n  const {\n    abilities,\n    languages,\n    details,\n    weapon_training,\n    traits,\n  } = state.character;\n  const {\n    strength: str,\n    dexterity: dex,\n    constitution: con,\n    intelligence: int,\n    wisdom: wis,\n    charisma: cha,\n  } = abilities;\n\n  return (\n    <div className={\"character-details\"}>\n      <Descriptions\n        className={\"details-top\"}\n        column={6}\n        size={\"small\"}\n        bordered={true}\n        layout={\"vertical\"}\n      >\n        <DescriptionsItem className={\"details-score\"} label={\"STR\"}>\n          {str}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score\"} label={\"DEX\"}>\n          {dex}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score\"} label={\"CON\"}>\n          {con}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score\"} label={\"INT\"}>\n          {int}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score\"} label={\"WIS\"}>\n          {wis}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score\"} label={\"CHA\"}>\n          {cha}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score-mod\"}>\n          {getMod(str)}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score-mod\"}>\n          {getMod(dex)}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score-mod\"}>\n          {getMod(con)}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score-mod\"}>\n          {getMod(int)}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score-mod\"}>\n          {getMod(wis)}\n        </DescriptionsItem>\n        <DescriptionsItem className={\"details-score-mod\"}>\n          {getMod(cha)}\n        </DescriptionsItem>\n        <DescriptionsItem label={\"Languages\"} span={3}>\n          {languages}\n        </DescriptionsItem>\n        <DescriptionsItem label={\"Traits\"} span={3}>\n          {traits}\n        </DescriptionsItem>\n        <DescriptionsItem label={\"Weapon Proficiences\"} span={6}>\n          <div className={\"details-profs\"}>\n            {map(weapon_training, (prof: trainingType) => {\n              return (\n                <WeaponProf proficiency={prof} key={`prof-${prof.name}`} />\n              );\n            })}\n          </div>\n        </DescriptionsItem>\n      </Descriptions>\n      <Descriptions\n        className={\"details-bottom\"}\n        column={1}\n        size={\"small\"}\n        bordered={true}\n        layout={\"vertical\"}\n      >\n        <DescriptionsItem label={\"Background, Details, Notes\"}>\n          {details\n            ? details\n            : \"Write down some extra details about your character?\"}\n        </DescriptionsItem>\n      </Descriptions>\n    </div>\n  );\n}\n\nexport default CharacterDetails;\n","import React, { useCallback } from \"react\";\nimport { Form, Input, Button, Select, InputNumber, Row, Col } from \"antd\";\nimport { map, startCase, assignIn, omit } from \"lodash\";\n\nimport { EditStateWithReducerProps } from \"../common/interfaces\";\nimport { trainingType } from \"../common/types\";\n\nexport interface CharacterFormProps extends EditStateWithReducerProps {}\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nfunction CharacterForm({ state, dispatch, setEditing }: CharacterFormProps) {\n  const [form] = Form.useForm();\n  const { character } = state;\n\n  const weaponSelect = useCallback((): JSX.Element => {\n    return (\n      <Select>\n        <Option value={\"U\"}>Untrained</Option>\n        <Option value={\"T\"}>Trained</Option>\n        <Option value={\"E\"}>Expert</Option>\n        <Option value={\"M\"}>Master</Option>\n        <Option value={\"L\"}>Legendary</Option>\n      </Select>\n    );\n  }, []);\n\n  const flatterChar: any = assignIn(\n    omit(character, \"weapon_training\"),\n    ...map(character.weapon_training, (prof: trainingType) => {\n      return { [`weapon_training_${prof.name}`]: prof.training };\n    })\n  );\n\n  console.log(window.innerHeight);\n\n  return (\n    <Form\n      className={\"character-form\"}\n      form={form}\n      initialValues={flatterChar}\n      layout={\"vertical\"}\n      size={window.innerHeight > 800 ? \"middle\" : \"small\"}\n      wrapperCol={{ offset: 1 }}\n      colon={true}\n    >\n      <Row gutter={15}>\n        <Col span={6}>\n          <Form.Item\n            key={\"form-name\"}\n            label={\"Name\"}\n            name={\"name\"}\n            rules={[\n              {\n                required: true,\n                message: \"Character needs a name to save properly.\",\n              },\n            ]}\n          >\n            <Input placeholder={\"Please enter a name.\"} />\n          </Form.Item>\n          <Form.Item key={\"form-ancestry\"} label={\"Ancestry\"} name={\"ancestry\"}>\n            <Input />\n          </Form.Item>\n          <Form.Item key={\"form-heritage\"} label={\"Heritage\"} name={\"heritage\"}>\n            <Input />\n          </Form.Item>\n          <Form.Item\n            key={\"form-background\"}\n            label={\"Background\"}\n            name={\"background\"}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item key={\"form-size\"} label={\"Size\"} name={\"size\"}>\n            <Select>\n              <Option value={\"small\"}>Small</Option>\n              <Option value={\"medium\"}>Medium</Option>\n              <Option value={\"large\"}>Large</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            key={\"form-languages\"}\n            label={\"Languages\"}\n            name={\"languages\"}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item key={\"form-diety\"} label={\"Diety\"} name={\"diety\"}>\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            key={\"form-alignment\"}\n            label={\"Alignment\"}\n            name={\"alignment\"}\n          >\n            <Select>\n              <Option value=\"LG\">Lawful Good</Option>\n              <Option value=\"NG\">Neutral Good</Option>\n              <Option value=\"CG\">Chaotic Good</Option>\n              <Option value=\"LN\">Lawful Neutral</Option>\n              <Option value=\"N\">True Neutral</Option>\n              <Option value=\"CN\">Chaotic Neutral</Option>\n              <Option value=\"LE\">Lawful Evil</Option>\n              <Option value=\"NE\">Neutral Evil</Option>\n              <Option value=\"CE\">Chaotic Evil</Option>\n            </Select>\n          </Form.Item>\n        </Col>\n        <Col span={6}>\n          <Form.Item key={\"form-class\"} label={\"Class\"} name={\"class\"}>\n            <Input />\n          </Form.Item>\n          <Form.Item key={\"form-level\"} label={\"Level\"} name={\"level\"}>\n            <InputNumber min={1} max={20} />\n          </Form.Item>\n          <Form.Item key={\"form-exp\"} label={\"Experience\"} name={\"exp\"}>\n            <InputNumber min={0} max={999} />\n          </Form.Item>\n          <Form.Item\n            key={\"form-hero-points\"}\n            label={\"Hero Points\"}\n            name={\"hero_points\"}\n          >\n            <InputNumber min={0} max={3} />\n          </Form.Item>\n          <Form.Item key={\"form-traits\"} label={\"Traits\"} name={\"traits\"}>\n            <Input />\n          </Form.Item>\n          <Input.Group className={\"character-form-weapons\"}>\n            <span id={\"form-weapons-head\"}>Weapon Proficiences</span>\n            {map(character.weapon_training, (prof: trainingType) => {\n              return (\n                <Form.Item\n                  key={`form-${prof.name}`}\n                  label={startCase(prof.name)}\n                  name={`weapon_training_${prof.name}`}\n                >\n                  {weaponSelect()}\n                </Form.Item>\n              );\n            })}\n          </Input.Group>\n        </Col>\n        <Col span={4}>\n          <Form.Item\n            key={\"form-strength\"}\n            label={\"Strength\"}\n            name={[\"abilities\", \"strength\"]}\n          >\n            <InputNumber min={6} max={30} />\n          </Form.Item>\n          <Form.Item\n            key={\"form-dexterity\"}\n            label={\"Dexterity\"}\n            name={[\"abilities\", \"dexterity\"]}\n          >\n            <InputNumber min={6} max={30} />\n          </Form.Item>\n          <Form.Item\n            key={\"form-constitution\"}\n            label={\"Constitution\"}\n            name={[\"abilities\", \"constitution\"]}\n          >\n            <InputNumber min={6} max={30} />\n          </Form.Item>\n          <Form.Item\n            key={\"form-intelligence\"}\n            label={\"Intelligence\"}\n            name={[\"abilities\", \"intelligence\"]}\n          >\n            <InputNumber min={6} max={30} />\n          </Form.Item>\n          <Form.Item\n            key={\"form-wisdom\"}\n            label={\"Wisdom\"}\n            name={[\"abilities\", \"wisdom\"]}\n          >\n            <InputNumber min={6} max={30} />\n          </Form.Item>\n          <Form.Item\n            key={\"form-charisma\"}\n            label={\"Charisma\"}\n            name={[\"abilities\", \"charisma\"]}\n          >\n            <InputNumber min={6} max={30} />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item key={\"form-details\"} label={\"Details\"} name={\"details\"}>\n            <TextArea\n              autoSize={\n                window.innerHeight > 800\n                  ? { minRows: 25, maxRows: 25 }\n                  : { minRows: 15, maxRows: 15 }\n              }\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <div className={\"character-form-btn\"}>\n        <Button\n          className={\"green-button\"}\n          size={window.innerHeight > 800 ? \"large\" : \"middle\"}\n          type={\"primary\"}\n          onClick={() => {\n            let newChar = form.getFieldsValue();\n            const weapProf: trainingType[] = [\n              {\n                name: \"simple\",\n                training: newChar[\"weapon_training_simple\"],\n              },\n              {\n                name: \"martial\",\n                training: newChar[\"weapon_training_martial\"],\n              },\n              {\n                name: \"unarmed\",\n                training: newChar[\"weapon_training_unarmed\"],\n              },\n            ];\n            newChar = omit(\n              newChar,\n              \"weapon_training_simple\",\n              \"weapon_training_martial\",\n              \"weapon_training_unarmed\",\n              \"weapon_training_other\"\n            );\n            newChar[\"weapon_training\"] = weapProf;\n\n            dispatch({\n              type: \"CHARACTER\",\n              payload: assignIn(character, newChar),\n            });\n            setEditing(false);\n          }}\n        >\n          Save\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\nexport default CharacterForm;\n","import React, { useState } from \"react\";\nimport { Button, Descriptions } from \"antd\";\nimport { EditFilled } from \"@ant-design/icons\";\n\nimport \"./character.less\";\nimport CharacterInfo from \"./character-info\";\nimport CharacterDetails from \"./character-details\";\nimport CharacterForm from \"./character-form\";\nimport { WithReducerProps } from \"../common/interfaces\";\n\nexport interface CharacterProps extends WithReducerProps {}\n\nfunction Character({ state, dispatch }: CharacterProps) {\n  const [editing, setEditing] = useState<boolean>(false);\n\n  if (!editing) {\n    return (\n      <div className={\"character-content\"}>\n        <Descriptions\n          className={\"character-title\"}\n          title={state.character.name}\n          extra={\n            <Button\n              type={\"primary\"}\n              className={\"blue-button\"}\n              icon={<EditFilled />}\n              onClick={() => setEditing(true)}\n            />\n          }\n        />\n        <CharacterInfo state={state} dispatch={dispatch} />\n        <CharacterDetails state={state} dispatch={dispatch} />\n      </div>\n    );\n  } else {\n    return (\n      <div className={\"character-content\"}>\n        <Descriptions\n          className={\"character-title\"}\n          title={\"Edit Character Information\"}\n        />\n        <CharacterForm\n          setEditing={setEditing}\n          state={state}\n          dispatch={dispatch}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Character;\n","import React from 'react';\n\nfunction Combat() {\n    return (\n        <div>This is Combat Content</div>\n    )\n}\n\nexport default Combat;","import React from 'react';\n\nfunction Feats() {\n    return (\n        <div>This is Feats Content</div>\n    )\n}\n\nexport default Feats;","import React from 'react';\n\nfunction Inventory() {\n    return (\n        <div>This is Inventory Content</div>\n    )\n}\n\nexport default Inventory;","import React, { useState } from \"react\";\nimport { cloneDeep, debounce, isNull } from \"lodash\";\nimport { Card, Button, Input } from \"antd\";\nimport { EditFilled, CheckOutlined } from \"@ant-design/icons\";\n\nimport { WithReducerProps } from '../common/interfaces';\n\nconst { TextArea } = Input;\n\nexport interface GeneralNotesProps extends WithReducerProps {}\n\nconst GeneralNotes = ({ state, dispatch }: GeneralNotesProps) => {\n  const [editing, setEditing] = useState(false);\n\n  const changeGeneral = (newText: string | null = null) => {\n    let newGeneralNote = cloneDeep(state.notes.general);\n\n    if (!isNull(newText)) {\n      newGeneralNote.text = newText;\n    }\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: true,\n        value: newGeneralNote,\n      },\n    });\n  };\n\n  const debouncedUpdate = debounce(changeGeneral, 300);\n\n  const toggleEditing = () => {\n    if (editing) {\n      debouncedUpdate.flush();\n      setEditing(false);\n    } else {\n      setEditing(true);\n    }\n  };\n\n  return (\n    <div className={\"general-notes\"}>\n      <Card\n        title={\n          <div className={\"card-header\"}>\n            {state.notes.general.title}\n            <Button\n              type={\"primary\"}\n              className={editing ? \"green-button\" : \"blue-button\"}\n              icon={editing ? <CheckOutlined /> : <EditFilled />}\n              onClick={toggleEditing}\n            />\n          </div>\n        }\n      >\n        {editing ? (\n          <TextArea\n            className={\"general-notes-edit\"}\n            defaultValue={state.notes.general.text}\n            autoSize={{ minRows: 10, maxRows: 35 }}\n            onChange={(e) => {\n              e.persist();\n              debouncedUpdate(e.target.value);\n            }}\n          />\n        ) : (\n          <p className={\"note-body\"}>{state.notes.general.text}</p>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default GeneralNotes;\n","import React, { useState, useEffect } from \"react\";\nimport { map, debounce, cloneDeep, findIndex, without } from \"lodash\";\nimport { Card, Button, Input } from \"antd\";\nimport {\n  EditFilled,\n  PlusOutlined,\n  CloseOutlined,\n  CheckOutlined,\n} from \"@ant-design/icons\";\n\nimport { baseNote } from \"../common/defaults\";\nimport { WithReducerProps } from \"../common/interfaces\";\nimport { noteType } from '../common/types';\n\nconst { TextArea } = Input;\n\nexport interface OtherNotesProps extends WithReducerProps {}\n\nconst OtherNotes = ({ state, dispatch }: OtherNotesProps) => {\n  const [editing, setEditing] = useState(0);\n\n  useEffect(() => {\n    if (state.notes.other.length === 0) {\n      addOther();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  const addOther = () => {\n    let newOtherNotes = [...state.notes.other];\n    let newNote = {\n      ...cloneDeep(baseNote),\n      id: newOtherNotes.length + 1,\n      title: \"New Note\",\n      text: \"Write here!\",\n    };\n\n    newOtherNotes.push(newNote);\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: newOtherNotes,\n      },\n    });\n  };\n\n  const updateOtherTitle = (id: number, title: string) => {\n    let newOtherNotes = [...state.notes.other];\n    let updateIndex = findIndex(newOtherNotes, [\"id\", id]);\n    let updatedNote = cloneDeep(newOtherNotes[updateIndex]);\n\n    updatedNote.title = title;\n\n    newOtherNotes[updateIndex] = updatedNote;\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: newOtherNotes,\n      },\n    });\n  };\n\n  const updateOtherText = (id: number, text: string) => {\n    let newOtherNotes = [...state.notes.other];\n    let updateIndex = findIndex(newOtherNotes, [\"id\", id]);\n    let updatedNote = cloneDeep(newOtherNotes[updateIndex]);\n\n    updatedNote.text = text;\n\n    newOtherNotes[updateIndex] = updatedNote;\n\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: newOtherNotes,\n      },\n    });\n  };\n\n  const removeOther = (note: noteType) => {\n    dispatch({\n      type: \"NOTES\",\n      payload: {\n        general: false,\n        value: without(state.notes.other, note),\n      },\n    });\n  };\n\n  const debouncedUpdateTitle = debounce(updateOtherTitle, 300);\n  const debouncedUpdateText = debounce(updateOtherText, 300);\n\n  const toggleEditing = (id: number) => {\n    if (editing !== 0) {\n      debouncedUpdateTitle.flush();\n      debouncedUpdateText.flush();\n      setEditing(0);\n    } else {\n      setEditing(id);\n    }\n  };\n\n  return (\n    <div className={\"other-notes\"}>\n      <Card\n        title={\n          <div className={\"card-header\"}>\n            Other Notes\n            <Button\n              type={\"primary\"}\n              className={\"green-button\"}\n              icon={<PlusOutlined />}\n              onClick={addOther}\n            />\n          </div>\n        }\n      >\n        {map(state.notes.other, (note) => {\n          return (\n            <Card\n              className={\"other-note-card\"}\n              key={`other-note-${note.id}`}\n              title={\n                <div className={\"card-header\"}>\n                  {editing === note.id ? (\n                    <Input\n                      className={\"other-notes-edit-title\"}\n                      defaultValue={note.title}\n                      onPressEnter={() => toggleEditing(note.id)}\n                      onChange={(e) => {\n                        e.persist();\n                        debouncedUpdateTitle(note.id, e.target.value);\n                      }}\n                    />\n                  ) : (\n                    note.title\n                  )}\n                  <div className={\"card-header-actions\"}>\n                    <Button\n                      type={\"primary\"}\n                      className={\n                        editing === note.id ? \"green-button\" : \"blue-button\"\n                      }\n                      icon={\n                        editing === note.id ? <CheckOutlined /> : <EditFilled />\n                      }\n                      onClick={() => toggleEditing(note.id)}\n                    />\n                    <Button\n                      type={\"primary\"}\n                      className={\"red-button\"}\n                      icon={<CloseOutlined />}\n                      onClick={() => removeOther(note)}\n                    />\n                  </div>\n                </div>\n              }\n            >\n              {editing === note.id ? (\n                <TextArea\n                  className={\"other-notes-edit-text\"}\n                  defaultValue={note.text}\n                  autoSize={{ minRows: 4 }}\n                  onChange={(e) => {\n                    e.persist();\n                    debouncedUpdateText(note.id, e.target.value);\n                  }}\n                />\n              ) : (\n                <p>{note.text}</p>\n              )}\n            </Card>\n          );\n        })}\n      </Card>\n    </div>\n  );\n};\n\nexport default OtherNotes;\n","import React from \"react\";\n\nimport \"./notes.less\";\nimport GeneralNotes from \"./notes-general\";\nimport OtherNotes from \"./notes-other\";\nimport { WithReducerProps } from \"../common/interfaces\";\n\nexport interface NotesProps extends WithReducerProps {}\n\nconst Notes = ({ state, dispatch }: NotesProps) => {\n  return (\n    <div className={\"notes-content\"}>\n      <GeneralNotes state={state} dispatch={dispatch} />\n      <OtherNotes state={state} dispatch={dispatch} />\n    </div>\n  );\n};\n\nexport default Notes;\n","import React from 'react';\n\nfunction References() {\n    return (\n        <div>This is References Content</div>\n    )\n}\n\nexport default References;","import React from 'react';\n\n// NOTE: make sure to include a way to add lore skills\n// NOTE: sort into groups by ability?\nfunction Skills() {\n    return (\n        <div>This is Skills Content</div>\n    )\n}\n\nexport default Skills;","import React from 'react';\n\nfunction Spells() {\n    return (\n        <div>This is Spells Content</div>\n    )\n}\n\nexport default Spells;","import React from 'react';\n\nfunction CharHeader() {\n    return (\n        <div>This is CharHeader</div>\n    )\n}\n\nexport default CharHeader;","import React from \"react\";\nimport { isEqual } from \"lodash\";\nimport { Button, Modal, message } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\n\nimport { mainStateDefault } from \"../../common/defaults\";\nimport { WithReducerProps } from \"../../common/interfaces\";\n\nconst { confirm } = Modal;\n\nexport interface NewButtonProps extends WithReducerProps {}\n\nconst NewButton = ({ state, dispatch }: NewButtonProps) => {\n  const newChar = () => {\n    dispatch({ type: \"NEW\" });\n    message.success(\"Created new character!\");\n  };\n\n  const handleNew = () => {\n    if (!isEqual(state, mainStateDefault)) {\n      confirm({\n        title: \"Do you want to override the current character?\",\n        icon: <ExclamationCircleOutlined />,\n        content: \"You will lose any unsaved changes.\",\n        okText: \"Override\",\n        onOk() {\n          newChar();\n        },\n      });\n    } else {\n      message.success(\"Created new character!\");\n    }\n  };\n\n  return (\n    <Button\n      type={\"primary\"}\n      className={\"red-button\"}\n      size={\"small\"}\n      onClick={handleNew}\n    >\n      New\n    </Button>\n  );\n};\n\nexport default NewButton;\n","import React, { useState } from \"react\";\nimport { keys, isEqual, map } from \"lodash\";\nimport { Button, Select, Modal, message, Checkbox } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\n\nimport { mainStateDefault } from \"../../common/defaults\";\nimport { WithReducerProps } from \"../../common/interfaces\";\nimport { setAndGetDefaultChar, checkIfDefault } from \"../../common/utils\";\n\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nexport interface LoadButtonProps extends WithReducerProps {}\n\nconst LoadButton = ({ state, dispatch }: LoadButtonProps) => {\n  const [loadVisible, setLoadVisible] = useState<boolean>(false);\n  const [toLoadName, setToLoadName] = useState<string>(\"\");\n  const [makeDefault, setMakeDefault] = useState<boolean>(false);\n\n  const loadChar = () => {\n    if (toLoadName) {\n      if (makeDefault) {\n        dispatch({\n          type: \"LOAD\",\n          payload: setAndGetDefaultChar(toLoadName),\n        });\n      }\n      dispatch({\n        type: \"LOAD\",\n        payload: JSON.parse(localStorage[toLoadName]),\n      });\n    } else {\n      message.error(\"No character selected!\");\n    }\n    setToLoadName(\"\");\n  };\n\n  const handleOk = () => {\n    setLoadVisible(false);\n    if (!isEqual(state, mainStateDefault)) {\n      confirm({\n        title: \"Do you want to override the current character?\",\n        icon: <ExclamationCircleOutlined />,\n        content: \"You will lose any unsaved changes.\",\n        okText: \"Override\",\n        onOk() {\n          loadChar();\n        },\n      });\n    } else {\n      loadChar();\n    }\n  };\n\n  const handleOpenModal = () => {\n    if (keys(localStorage).length === 0) {\n      message.info(\"No characters to load.\");\n    } else {\n      setLoadVisible(true);\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        type={\"primary\"}\n        className={\"blue-button\"}\n        size={\"small\"}\n        onClick={handleOpenModal}\n      >\n        Load\n      </Button>\n      <Modal\n        title={\"Load Character\"}\n        visible={loadVisible}\n        closable={false}\n        onOk={handleOk}\n        okText={\"Load\"}\n        onCancel={() => setLoadVisible(false)}\n      >\n        <div className={\"load-modal\"}>\n          <Select\n            placeholder={\"Select a character\"}\n            onChange={(value: string) => setToLoadName(value)}\n          >\n            {map(keys(localStorage), (name) => {\n              return (\n                <Option key={name} value={name}>\n                  {name}\n                </Option>\n              );\n            })}\n          </Select>\n          <Checkbox\n            onChange={(e) => setMakeDefault(e.target.checked)}\n            disabled={!toLoadName || checkIfDefault(toLoadName)}\n          >\n            Make this character the default?\n          </Checkbox>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoadButton;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\nimport { saveLocalChar } from \"../../common/utils\";\nimport { mainStateType } from \"../../common/types\";\n\nexport interface SaveButtonProps {\n  state: mainStateType;\n}\n\nconst SaveButton = ({ state }: SaveButtonProps) => {\n  return (\n    <Button\n      type={\"primary\"}\n      className={\"green-button\"}\n      size={\"small\"}\n      onClick={() => saveLocalChar(state)}\n    >\n      Save\n    </Button>\n  );\n};\n\nexport default SaveButton;\n","import { assignIn, cloneDeep } from \"lodash\";\n\nimport { mainStateDefault } from \"../common/defaults\";\nimport { mainStateType } from \"../common/types\";\nimport { saveSessionChar } from \"../common/utils\";\n\nexport type mainReducerActionType =\n  | \"NEW\"\n  | \"LOAD\"\n  | \"CHARACTER\"\n  | \"PORTRAIT\"\n  | \"NOTES\";\n\ninterface MainReducerProps {\n  (\n    state: mainStateType,\n    action: { type: mainReducerActionType; payload: any }\n  ): any;\n}\n\nexport const MainReducer: MainReducerProps = (state, action) => {\n  let newState = cloneDeep(state);\n\n  switch (action.type) {\n    case \"NEW\": {\n      newState = cloneDeep(mainStateDefault);\n      break;\n    }\n\n    case \"LOAD\": {\n      newState = assignIn(newState, action.payload);\n      break;\n    }\n\n    case \"CHARACTER\": {\n      // action.payload: characterType object\n      let newCharacter = cloneDeep(newState.character);\n      newCharacter = assignIn(newCharacter, action.payload);\n      newState = assignIn(newState, { character: newCharacter });\n      break;\n    }\n\n    case \"PORTRAIT\": {\n      // action.payload: base64 string for the image\n      let newCharacter = cloneDeep(newState.character);\n      newCharacter = assignIn(newCharacter, {\n        portrait: action.payload,\n      });\n      newState = assignIn(newState, { character: newCharacter });\n      break;\n    }\n\n    case \"NOTES\": {\n      // action.payload: {\n      //     general: boolean,\n      //     value: {title: string, text: string} OR {title: string, text: string}[]\n      // }\n      if (action.payload.general) {\n        let newNotes = cloneDeep(newState.notes);\n        newNotes = assignIn(newNotes, {\n          general: cloneDeep(action.payload.value),\n        });\n        newState = assignIn(newState, {\n          notes: newNotes,\n        });\n      } else {\n        let newNotes = cloneDeep(newState.notes);\n        newNotes = assignIn(newNotes, {\n          other: [...action.payload.value],\n        });\n        newState = assignIn(newState, {\n          notes: newNotes,\n        });\n      }\n      break;\n    }\n\n    default: {\n      newState = state;\n      break;\n    }\n  }\n\n  saveSessionChar(newState);\n  return newState;\n};\n","import React, { useState, useReducer, useEffect } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  UserOutlined,\n  FireOutlined,\n  TagsOutlined,\n  BarsOutlined,\n  AlertOutlined,\n  ShoppingOutlined,\n  BookOutlined,\n  FileSearchOutlined,\n} from \"@ant-design/icons\";\n\nimport \"./app.less\";\nimport Character from \"../character/character\";\nimport Combat from \"../combat/combat\";\nimport Feats from \"../feats/feats\";\nimport Inventory from \"../inventory/inventory\";\nimport Notes from \"../notes/notes\";\nimport References from \"../references/references\";\nimport Skills from \"../skills/skills\";\nimport Spells from \"../spells/spells\";\nimport CharHeader from \"../common/components/char-header\";\nimport NewButton from \"./buttons/new-button\";\nimport LoadButton from \"./buttons/load-button\";\nimport SaveButton from \"./buttons/save-button\";\nimport { MainReducer } from \"./main-reducer\";\nimport { mainStateDefault } from \"../common/defaults\";\nimport {\n  checkForDefault,\n  getDefaultChar,\n  checkForSessionChar,\n  getSessionChar,\n} from \"../common/utils\";\n\nconst { Header, Content, Sider, Footer } = Layout;\n\nconst App = () => {\n  const [currContent, changeCurrContent] = useState<\n    | \"character\"\n    | \"feats\"\n    | \"skills\"\n    | \"combat\"\n    | \"spells\"\n    | \"inventory\"\n    | \"notes\"\n    | \"reference\"\n  >(\"character\");\n  const [collapsed, setCollapsed] = useState<boolean>(window.innerHeight < 800);\n  const [state, dispatch] = useReducer(MainReducer, mainStateDefault);\n\n  useEffect(() => {\n    if (checkForSessionChar()) {\n      dispatch({\n        type: \"LOAD\",\n        payload: getSessionChar(),\n      });\n    } else if (checkForDefault()) {\n      dispatch({\n        type: \"LOAD\",\n        payload: getDefaultChar(),\n      });\n    }\n  }, []);\n\n  const handleMenuChange = (item: any) => {\n    if (![\"new-action\", \"load-action\", \"save-action\"].includes(item.key)) {\n      changeCurrContent(item.key);\n    }\n  };\n\n  let mainContent = <div>This is no Content</div>;\n  switch (currContent) {\n    case \"character\":\n      mainContent = <Character state={state} dispatch={dispatch} />;\n      break;\n\n    case \"feats\":\n      mainContent = <Feats />;\n      break;\n\n    case \"skills\":\n      mainContent = <Skills />;\n      break;\n\n    case \"combat\":\n      mainContent = <Combat />;\n      break;\n\n    case \"spells\":\n      mainContent = <Spells />;\n      break;\n\n    case \"inventory\":\n      mainContent = <Inventory />;\n      break;\n\n    case \"notes\":\n      mainContent = <Notes state={state} dispatch={dispatch} />;\n      break;\n\n    case \"reference\":\n      mainContent = <References />;\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"app\">\n      <Layout>\n        <Sider\n          className={\"app-sider\"}\n          collapsible={true}\n          collapsed={collapsed}\n          onCollapse={(collapsed) => setCollapsed(collapsed)}\n        >\n          <div className={\"app-header\"}>\n            <img\n              className={\"logo\"}\n              src={process.env.PUBLIC_URL + \"/logo192.png\"}\n              alt={\n                \"Website icon depicting a gold gear on a dark red square with rounded corners\"\n              }\n            />\n            {!collapsed && <Header>PF2 WebSheet</Header>}\n          </div>\n          <div className={!collapsed ? \"button-group row\" : \"button-group col\"}>\n            <NewButton state={state} dispatch={dispatch} />\n            <LoadButton state={state} dispatch={dispatch} />\n            <SaveButton state={state} />\n          </div>\n          <Menu\n            theme=\"dark\"\n            mode=\"inline\"\n            onSelect={handleMenuChange}\n            defaultSelectedKeys={[\"character\"]}\n          >\n            <Menu.Item\n              key=\"character\"\n              className={\"red\"}\n              icon={<UserOutlined />}\n            >\n              Character\n            </Menu.Item>\n            <Menu.Item\n              key=\"feats\"\n              className={\"volcano\"}\n              icon={<TagsOutlined />}\n            >\n              Feats\n            </Menu.Item>\n            <Menu.Item\n              key=\"skills\"\n              className={\"orange\"}\n              icon={<BarsOutlined />}\n            >\n              Skills\n            </Menu.Item>\n            <Menu.Item\n              key=\"combat\"\n              className={\"green\"}\n              icon={<AlertOutlined />}\n            >\n              Combat\n            </Menu.Item>\n            <Menu.Item key=\"spells\" className={\"blue\"} icon={<FireOutlined />}>\n              Spells\n            </Menu.Item>\n            <Menu.Item\n              key=\"inventory\"\n              className={\"geekblue\"}\n              icon={<ShoppingOutlined />}\n            >\n              Inventory\n            </Menu.Item>\n            <Menu.Item key=\"notes\" className={\"purple\"} icon={<BookOutlined />}>\n              Notes\n            </Menu.Item>\n            <Menu.Item\n              key=\"reference\"\n              className={\"magenta\"}\n              icon={<FileSearchOutlined />}\n            >\n              Reference\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className={\"app-layout\"}>\n          {currContent !== \"character\" && <CharHeader />}\n          <Content className={\"app-main\"}>{mainContent}</Content>\n          <Footer className={\"app-footer\"}>\n            This web-app uses trademarks and/or copyrights owned by Paizo Inc.,\n            which are used under Paizo's Community Use Policy. We are expressly\n            prohibited from charging you to use or access this content. This\n            web-app is not published, endorsed, or specifically approved by\n            Paizo Inc. For more information about Paizo's Community Use Policy,\n            please visit&nbsp;\n            <a href=\"https://paizo.com/communityuse\">paizo.com/communityuse</a>.\n            For more information about Paizo Inc. and Paizo products, please\n            visit <a href=\"https://paizo.com/\">paizo.com</a>.\n          </Footer>\n        </Layout>\n      </Layout>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.less\";\nimport App from \"./components/app/app\";\nimport * as serviceWorker from \"./tests/serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}